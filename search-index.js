var searchIndex = {};
searchIndex["wayland_client"] = {"doc":"Client-side Wayland connector","items":[[3,"EnvHandler","wayland_client","Utility type to handle the registry and global objects",null,null],[3,"EventQueue","","An event queue managing wayland events",null,null],[3,"EventQueueHandle","","Handle to an event queue",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[3,"StateGuard","","Guard to access internal state of an event queue",null,null],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",null,null],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",0,null],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",0,null],[4,"FatalError","","Enum representing possible errors fatal to a wayland session",null,null],[13,"Io","","Session aborted after an I/O error",1,null],[13,"Protocol","","Session aborted after a protocol error",1,null],[12,"interface","wayland_client::FatalError","name of the interface of the proxy that generated this error",1,null],[12,"proxy_id","","internal id of the proxy that generated this error",1,null],[12,"error_code","","code of the error, as defined by the `Error` enum of the interface of the proxy. It can directly be fed to the `from_raw` static method of this enum.",1,null],[4,"RegisterStatus","wayland_client","Status of a registration attempt of a proxy.",null,null],[13,"Registered","","The proxy was properly registered to this event queue & handler.",2,null],[13,"Unmanaged","","The proxy was not registered because it is not managed by `wayland-client`.",2,null],[13,"Dead","","The proxy was not registered because it is already destroyed.",2,null],[4,"RequestResult","","Possible outcome of the call of a request on a proxy",null,null],[13,"Sent","","Message has been buffered and will be sent to server",3,null],[13,"Destroyed","","This proxy is already destroyed, request has been ignored",3,null],[4,"Liveness","","Represents the state of liveness of a wayland object",null,null],[13,"Alive","","This object is alive and its requests can be called",4,null],[13,"Dead","","This object is dead, calling its requests will do nothing and return and error.",4,null],[13,"Unmanaged","","This object is not managed by `wayland-client`, you can call its methods but this might crash the program if it was actually dead.",4,null],[5,"connect_to","","Connect to the compositor socket",null,{"inputs":[{"name":"osstr"}],"output":{"name":"result"}}],[5,"default_connect","","Connect to the compositor socket",null,{"inputs":[],"output":{"name":"result"}}],[0,"protocol","","The wayland core protocol",null,null],[0,"wl_display","wayland_client::protocol","core global object",null,null],[3,"WlDisplay","wayland_client::protocol::wl_display","",null,null],[4,"Error","","global error values",null,null],[13,"InvalidObject","","",5,null],[13,"InvalidMethod","","",5,null],[13,"NoMemory","","",5,null],[0,"wl_registry","wayland_client::protocol","global registry object",null,null],[3,"WlRegistry","wayland_client::protocol::wl_registry","",null,null],[8,"Handler","","",null,null],[11,"global","","announce global object",6,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"global_remove","","announce removal of global object",6,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"}],"output":null}],[0,"wl_callback","wayland_client::protocol","callback object",null,null],[3,"WlCallback","wayland_client::protocol::wl_callback","",null,null],[8,"Handler","","",null,null],[11,"done","","done event",7,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlcallback"},{"name":"u32"}],"output":null}],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",null,null],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",null,null],[0,"wl_shm","wayland_client::protocol","shared memory support",null,null],[3,"WlShm","wayland_client::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","",8,null],[13,"InvalidStride","","",8,null],[13,"InvalidFd","","",8,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","",9,null],[13,"Xrgb8888","","",9,null],[13,"C8","","",9,null],[13,"Rgb332","","",9,null],[13,"Bgr233","","",9,null],[13,"Xrgb4444","","",9,null],[13,"Xbgr4444","","",9,null],[13,"Rgbx4444","","",9,null],[13,"Bgrx4444","","",9,null],[13,"Argb4444","","",9,null],[13,"Abgr4444","","",9,null],[13,"Rgba4444","","",9,null],[13,"Bgra4444","","",9,null],[13,"Xrgb1555","","",9,null],[13,"Xbgr1555","","",9,null],[13,"Rgbx5551","","",9,null],[13,"Bgrx5551","","",9,null],[13,"Argb1555","","",9,null],[13,"Abgr1555","","",9,null],[13,"Rgba5551","","",9,null],[13,"Bgra5551","","",9,null],[13,"Rgb565","","",9,null],[13,"Bgr565","","",9,null],[13,"Rgb888","","",9,null],[13,"Bgr888","","",9,null],[13,"Xbgr8888","","",9,null],[13,"Rgbx8888","","",9,null],[13,"Bgrx8888","","",9,null],[13,"Abgr8888","","",9,null],[13,"Rgba8888","","",9,null],[13,"Bgra8888","","",9,null],[13,"Xrgb2101010","","",9,null],[13,"Xbgr2101010","","",9,null],[13,"Rgbx1010102","","",9,null],[13,"Bgrx1010102","","",9,null],[13,"Argb2101010","","",9,null],[13,"Abgr2101010","","",9,null],[13,"Rgba1010102","","",9,null],[13,"Bgra1010102","","",9,null],[13,"Yuyv","","",9,null],[13,"Yvyu","","",9,null],[13,"Uyvy","","",9,null],[13,"Vyuy","","",9,null],[13,"Ayuv","","",9,null],[13,"Nv12","","",9,null],[13,"Nv21","","",9,null],[13,"Nv16","","",9,null],[13,"Nv61","","",9,null],[13,"Yuv410","","",9,null],[13,"Yvu410","","",9,null],[13,"Yuv411","","",9,null],[13,"Yvu411","","",9,null],[13,"Yuv420","","",9,null],[13,"Yvu420","","",9,null],[13,"Yuv422","","",9,null],[13,"Yvu422","","",9,null],[13,"Yuv444","","",9,null],[13,"Yvu444","","",9,null],[8,"Handler","","",null,null],[11,"format","","pixel format description",10,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshm"},{"name":"format"}],"output":null}],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",null,null],[8,"Handler","","",null,null],[11,"release","","compositor releases buffer",11,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlbuffer"}],"output":null}],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","",12,null],[13,"InvalidActionMask","","",12,null],[13,"InvalidAction","","",12,null],[13,"InvalidOffer","","",12,null],[8,"Handler","","",null,null],[11,"offer","","advertise offered mime type",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"string"}],"output":null}],[11,"source_actions","","notify the source-side available actions",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"u32"}],"output":null}],[11,"action","","notify the selected action",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"u32"}],"output":null}],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","",14,null],[13,"InvalidSource","","",14,null],[8,"Handler","","",null,null],[11,"target","","a target accepts an offered mime type",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"option"}],"output":null}],[11,"send","","send the data",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"string"},{"name":"rawfd"}],"output":null}],[11,"cancelled","","selection was cancelled",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"dnd_finished","","the drag-and-drop operation concluded",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"action","","notify the selected action",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"u32"}],"output":null}],[0,"wl_data_device","wayland_client::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","",16,null],[8,"Handler","","",null,null],[11,"data_offer","","introduce a new wl_data_offer",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"wldataoffer"}],"output":null}],[11,"enter","","initiate drag-and-drop session",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"},{"name":"option"}],"output":null}],[11,"leave","","end drag-and-drop session",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"}],"output":null}],[11,"motion","","drag-and-drop session motion",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"drop","","end drag-and-drop session successfully",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"}],"output":null}],[11,"selection","","advertise new selection",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"option"}],"output":null}],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",null,null],[3,"WlDataDeviceManager","wayland_client::protocol::wl_data_device_manager","",null,null],[3,"DndAction","","drag and drop actions",null,null],[17,"None","","",null,null],[17,"Copy","","",null,null],[17,"Move","","",null,null],[17,"Ask","","",null,null],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_client::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","",18,null],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",null,null],[3,"WlShellSurface","wayland_client::protocol::wl_shell_surface","",null,null],[3,"Resize","","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","",19,null],[13,"Scale","","",19,null],[13,"Driver","","",19,null],[13,"Fill","","",19,null],[17,"None","","",null,null],[17,"Top","","",null,null],[17,"Bottom","","",null,null],[17,"Left","","",null,null],[17,"TopLeft","","",null,null],[17,"BottomLeft","","",null,null],[17,"Right","","",null,null],[17,"TopRight","","",null,null],[17,"BottomRight","","",null,null],[17,"Inactive","","",null,null],[8,"Handler","","",null,null],[11,"ping","","ping client",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"configure","","suggest resize",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"resize"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"popup_done","","popup interaction is done",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"}],"output":null}],[0,"wl_surface","wayland_client::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_client::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","",21,null],[13,"InvalidTransform","","",21,null],[8,"Handler","","",null,null],[11,"enter","","surface enters an output",22,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlsurface"},{"name":"wloutput"}],"output":null}],[11,"leave","","surface leaves an output",22,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlsurface"},{"name":"wloutput"}],"output":null}],[0,"wl_seat","wayland_client::protocol","group of input devices",null,null],[3,"WlSeat","wayland_client::protocol::wl_seat","",null,null],[3,"Capability","","seat capability bitmask",null,null],[17,"Pointer","","",null,null],[17,"Keyboard","","",null,null],[17,"Touch","","",null,null],[8,"Handler","","",null,null],[11,"capabilities","","seat capabilities changed",23,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlseat"},{"name":"capability"}],"output":null}],[11,"name","","unique identifier for this seat",23,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlseat"},{"name":"string"}],"output":null}],[0,"wl_pointer","wayland_client::protocol","pointer input device",null,null],[3,"WlPointer","wayland_client::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","",24,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",25,null],[13,"Pressed","","",25,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","",26,null],[13,"HorizontalScroll","","",26,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","",27,null],[13,"Finger","","",27,null],[13,"Continuous","","",27,null],[8,"Handler","","",null,null],[11,"enter","","enter event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"leave","","leave event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"motion","","pointer motion event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"button","","pointer button event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"axis","","axis event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"axis"},{"name":"f64"}],"output":null}],[11,"frame","","end of a pointer event sequence",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"}],"output":null}],[11,"axis_source","","axis source event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"axissource"}],"output":null}],[11,"axis_stop","","axis stop event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"axis"}],"output":null}],[11,"axis_discrete","","axis click event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"axis"},{"name":"i32"}],"output":null}],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","",29,null],[13,"XkbV1","","",29,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","",30,null],[13,"Pressed","","",30,null],[8,"Handler","","",null,null],[11,"keymap","","keyboard mapping",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"keymapformat"},{"name":"rawfd"},{"name":"u32"}],"output":null}],[11,"enter","","enter event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"},{"name":"vec"}],"output":null}],[11,"leave","","leave event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"key","","key event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"keystate"}],"output":null}],[11,"modifiers","","modifier and group state",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"repeat_info","","repeat rate and delay",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"i32"},{"name":"i32"}],"output":null}],[0,"wl_touch","wayland_client::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_client::protocol::wl_touch","",null,null],[8,"Handler","","",null,null],[11,"down","","touch down event and beginning of a touch sequence",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"up","","end of a touch event sequence",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"motion","","update of touch point coordinates",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"frame","","end of touch frame event",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"}],"output":null}],[11,"cancel","","touch session cancelled",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"}],"output":null}],[0,"wl_output","wayland_client::protocol","compositor output region",null,null],[3,"WlOutput","wayland_client::protocol::wl_output","",null,null],[3,"Mode","","mode information",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","",33,null],[13,"None","","",33,null],[13,"HorizontalRgb","","",33,null],[13,"HorizontalBgr","","",33,null],[13,"VerticalRgb","","",33,null],[13,"VerticalBgr","","",33,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","",34,null],[13,"_90","","",34,null],[13,"_180","","",34,null],[13,"_270","","",34,null],[13,"Flipped","","",34,null],[13,"Flipped90","","",34,null],[13,"Flipped180","","",34,null],[13,"Flipped270","","",34,null],[17,"Current","","",null,null],[17,"Preferred","","",null,null],[8,"Handler","","",null,null],[11,"geometry","","properties of the output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"subpixel"},{"name":"string"},{"name":"string"},{"name":"transform"}],"output":null}],[11,"mode","","advertise available modes for the output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"mode"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"done","","sent all information about output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"}],"output":null}],[11,"scale","","output scaling properties",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"i32"}],"output":null}],[0,"wl_region","wayland_client::protocol","region interface",null,null],[3,"WlRegion","wayland_client::protocol::wl_region","",null,null],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","",36,null],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","",37,null],[0,"protocol_interfaces","wayland_client","Interfaces for the core protocol",null,null],[7,"wl_display_requests","wayland_client::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[11,"fmt","wayland_client","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"flush","wayland_client::protocol::wl_display","Non-blocking write to the server",38,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"create_event_queue","","Create a new EventQueue",38,{"inputs":[{"name":"self"}],"output":{"name":"eventqueue"}}],[11,"last_error","","Get the last error that occured on the session",38,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_fd","","Get the raw File Descriptor associated with the connection",38,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"drop","","",38,{"inputs":[{"name":"self"}],"output":null}],[11,"register","wayland_client","Register a proxy to a handler of this event queue.",39,{"inputs":[{"name":"self"},{"name":"p"},{"name":"usize"}],"output":{"name":"registerstatus"}}],[11,"add_handler","","Insert a new handler to this event queue",39,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"usize"}}],[11,"add_handler_with_init","","Insert a new handler with init",39,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"usize"}}],[11,"remove_handler","","Remove a handler previously inserted in this event loop and returns it.",39,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"get_handler","","Get a reference to a handler",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"get_mut_handler","","Get a mutable reference to a handler",40,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"dispatch","","Dispatches events from the internal buffer.",41,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",41,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"sync_roundtrip","","Synchronous roundtrip",41,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"state","","Get a handle to the internal state",41,{"inputs":[{"name":"self"}],"output":{"name":"stateguard"}}],[11,"prepare_read","","Prepare an conccurent read",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"deref","","",41,{"inputs":[{"name":"self"}],"output":{"name":"eventqueuehandle"}}],[11,"deref_mut","","",41,{"inputs":[{"name":"self"}],"output":{"name":"eventqueuehandle"}}],[11,"read_events","","Read events",42,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"cancel","","Cancel the read",42,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",42,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new EnvHandler",43,{"inputs":[],"output":{"name":"envhandler"}}],[11,"ready","","Is the handler ready",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"globals","","List of advertised globals",43,null],[11,"deref","","",43,{"inputs":[{"name":"self"}],"output":{"name":"h"}}],[11,"global","","",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"global_remove","","",43,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"}],"output":null}],[11,"message","","",43,null],[0,"egl","","EGL utilities",null,null],[3,"WlEglSurface","wayland_client::egl","EGL surface",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","Create an EGL surface from a wayland surface",44,{"inputs":[{"name":"wlsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"wleglsurface"}}],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",44,null],[11,"get_size","","Fetch current size of the EGL surface",44,null],[11,"resize","","Resize the EGL surface",44,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","Raw pointer to the EGL surface",44,null],[11,"drop","","",44,{"inputs":[{"name":"self"}],"output":null}],[0,"cursor","wayland_client","Cursor utilities",null,null],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_theme","","Attempts to load a cursor theme from given name.",null,{"inputs":[{"name":"option"},{"name":"u32"},{"name":"wlshm"}],"output":{"name":"cursortheme"}}],[11,"get_cursor","","Retrieve a cursor from the theme.",45,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"drop","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"name","","Retrieve the name of this cursor.",46,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"image_count","","Retrieve the number of images contained in this animated cursor",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"frame","","Retrieve the image number of cursor animation.",46,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"usize"}}],[11,"frame_and_duration","","Retrieve the image number and its duration.",46,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",46,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"deref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"wlbuffer"}}],[11,"ptr","wayland_client::protocol::wl_display","",38,null],[11,"from_ptr_new","","",38,null],[11,"from_ptr_initialized","","",38,null],[11,"interface_ptr","","",38,null],[11,"interface_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",38,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",38,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",38,{"inputs":[{"name":"self"},{"name":"wldisplay"}],"output":{"name":"bool"}}],[11,"set_user_data","","",38,null],[11,"get_user_data","","",38,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",5,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"sync","","asynchronous roundtrip",38,{"inputs":[{"name":"self"}],"output":{"name":"wlcallback"}}],[11,"get_registry","","get global registry object",38,{"inputs":[{"name":"self"}],"output":{"name":"wlregistry"}}],[11,"global","wayland_client::protocol::wl_registry","announce global object",6,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"global_remove","","announce removal of global object",6,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlregistry"},{"name":"u32"}],"output":null}],[11,"ptr","","",48,null],[11,"from_ptr_new","","",48,null],[11,"from_ptr_initialized","","",48,null],[11,"interface_ptr","","",48,null],[11,"interface_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",48,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",48,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",48,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",48,{"inputs":[{"name":"self"},{"name":"wlregistry"}],"output":{"name":"bool"}}],[11,"set_user_data","","",48,null],[11,"get_user_data","","",48,null],[11,"bind","","bind an object to the display",48,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"done","wayland_client::protocol::wl_callback","done event",7,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlcallback"},{"name":"u32"}],"output":null}],[11,"ptr","","",49,null],[11,"from_ptr_new","","",49,null],[11,"from_ptr_initialized","","",49,null],[11,"interface_ptr","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",49,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",49,{"inputs":[{"name":"self"},{"name":"wlcallback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",49,null],[11,"get_user_data","","",49,null],[11,"ptr","wayland_client::protocol::wl_compositor","",50,null],[11,"from_ptr_new","","",50,null],[11,"from_ptr_initialized","","",50,null],[11,"interface_ptr","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",50,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",50,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",50,{"inputs":[{"name":"self"},{"name":"wlcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",50,null],[11,"get_user_data","","",50,null],[11,"create_surface","","create new surface",50,{"inputs":[{"name":"self"}],"output":{"name":"wlsurface"}}],[11,"create_region","","create new region",50,{"inputs":[{"name":"self"}],"output":{"name":"wlregion"}}],[11,"ptr","wayland_client::protocol::wl_shm_pool","",51,null],[11,"from_ptr_new","","",51,null],[11,"from_ptr_initialized","","",51,null],[11,"interface_ptr","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",51,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",51,{"inputs":[{"name":"self"},{"name":"wlshmpool"}],"output":{"name":"bool"}}],[11,"set_user_data","","",51,null],[11,"get_user_data","","",51,null],[11,"create_buffer","","create a buffer from the pool",51,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"format"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the pool",51,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"resize","","change the size of the pool mapping",51,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"format","wayland_client::protocol::wl_shm","pixel format description",10,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshm"},{"name":"format"}],"output":null}],[11,"ptr","","",52,null],[11,"from_ptr_new","","",52,null],[11,"from_ptr_initialized","","",52,null],[11,"interface_ptr","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",52,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",52,{"inputs":[{"name":"self"},{"name":"wlshm"}],"output":{"name":"bool"}}],[11,"set_user_data","","",52,null],[11,"get_user_data","","",52,null],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",8,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",8,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"from_raw","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"create_pool","","create a shm pool",52,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"i32"}],"output":{"name":"wlshmpool"}}],[11,"release","wayland_client::protocol::wl_buffer","compositor releases buffer",11,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlbuffer"}],"output":null}],[11,"ptr","","",53,null],[11,"from_ptr_new","","",53,null],[11,"from_ptr_initialized","","",53,null],[11,"interface_ptr","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",53,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",53,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",53,{"inputs":[{"name":"self"},{"name":"wlbuffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",53,null],[11,"get_user_data","","",53,null],[11,"destroy","","destroy a buffer",53,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"offer","wayland_client::protocol::wl_data_offer","advertise offered mime type",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"string"}],"output":null}],[11,"source_actions","","notify the source-side available actions",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"u32"}],"output":null}],[11,"action","","notify the selected action",13,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldataoffer"},{"name":"u32"}],"output":null}],[11,"ptr","","",54,null],[11,"from_ptr_new","","",54,null],[11,"from_ptr_initialized","","",54,null],[11,"interface_ptr","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",54,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",54,{"inputs":[{"name":"self"},{"name":"wldataoffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",54,null],[11,"get_user_data","","",54,null],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",12,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"accept","","accept one of the offered mime types",54,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"receive","","request that the data is transferred",54,{"inputs":[{"name":"self"},{"name":"string"},{"name":"rawfd"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy data offer",54,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"finish","","the offer will no longer be used",54,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_actions","","set the available/preferred drag-and-drop actions",54,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"target","wayland_client::protocol::wl_data_source","a target accepts an offered mime type",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"option"}],"output":null}],[11,"send","","send the data",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"string"},{"name":"rawfd"}],"output":null}],[11,"cancelled","","selection was cancelled",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"dnd_finished","","the drag-and-drop operation concluded",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"}],"output":null}],[11,"action","","notify the selected action",15,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatasource"},{"name":"u32"}],"output":null}],[11,"ptr","","",55,null],[11,"from_ptr_new","","",55,null],[11,"from_ptr_initialized","","",55,null],[11,"interface_ptr","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",55,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",55,{"inputs":[{"name":"self"},{"name":"wldatasource"}],"output":{"name":"bool"}}],[11,"set_user_data","","",55,null],[11,"get_user_data","","",55,null],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"offer","","add an offered mime type",55,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the data source",55,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_actions","","set the available drag-and-drop actions",55,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"data_offer","wayland_client::protocol::wl_data_device","introduce a new wl_data_offer",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"wldataoffer"}],"output":null}],[11,"enter","","initiate drag-and-drop session",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"},{"name":"option"}],"output":null}],[11,"leave","","end drag-and-drop session",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"}],"output":null}],[11,"motion","","drag-and-drop session motion",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"drop","","end drag-and-drop session successfully",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"}],"output":null}],[11,"selection","","advertise new selection",17,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wldatadevice"},{"name":"option"}],"output":null}],[11,"ptr","","",56,null],[11,"from_ptr_new","","",56,null],[11,"from_ptr_initialized","","",56,null],[11,"interface_ptr","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",56,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",56,{"inputs":[{"name":"self"},{"name":"wldatadevice"}],"output":{"name":"bool"}}],[11,"set_user_data","","",56,null],[11,"get_user_data","","",56,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",16,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"start_drag","","start drag-and-drop operation",56,{"inputs":[{"name":"self"},{"name":"option"},{"name":"wlsurface"},{"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_selection","","copy data to the selection",56,{"inputs":[{"name":"self"},{"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"release","","destroy data device",56,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_data_device_manager","",57,null],[11,"from_ptr_new","","",57,null],[11,"from_ptr_initialized","","",57,null],[11,"interface_ptr","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",57,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",57,{"inputs":[{"name":"self"},{"name":"wldatadevicemanager"}],"output":{"name":"bool"}}],[11,"set_user_data","","",57,null],[11,"get_user_data","","",57,null],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"cmp","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"ordering"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",58,{"inputs":[],"output":{"name":"dndaction"}}],[11,"all","","Returns the set containing all flags.",58,{"inputs":[],"output":{"name":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",58,{"inputs":[{"name":"u32"}],"output":{"name":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",58,{"inputs":[{"name":"self"},{"name":"dndaction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",58,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"extend","","",58,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"dndaction"}}],[11,"from_raw","","",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"create_data_source","","create a new data source",57,{"inputs":[{"name":"self"}],"output":{"name":"wldatasource"}}],[11,"get_data_device","","create a new data device",57,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"wldatadevice"}}],[11,"ptr","wayland_client::protocol::wl_shell","",59,null],[11,"from_ptr_new","","",59,null],[11,"from_ptr_initialized","","",59,null],[11,"interface_ptr","","",59,null],[11,"interface_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",59,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",59,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",59,{"inputs":[{"name":"self"},{"name":"wlshell"}],"output":{"name":"bool"}}],[11,"set_user_data","","",59,null],[11,"get_user_data","","",59,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",18,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_shell_surface","","create a shell surface from a surface",59,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"wlshellsurface"}}],[11,"ping","wayland_client::protocol::wl_shell_surface","ping client",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"configure","","suggest resize",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"},{"name":"resize"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"popup_done","","popup interaction is done",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlshellsurface"}],"output":null}],[11,"ptr","","",60,null],[11,"from_ptr_new","","",60,null],[11,"from_ptr_initialized","","",60,null],[11,"interface_ptr","","",60,null],[11,"interface_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",60,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",60,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",60,{"inputs":[{"name":"self"},{"name":"wlshellsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",60,null],[11,"get_user_data","","",60,null],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"ordering"}}],[11,"hash","","",61,null],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[],"output":{"name":"resize"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[],"output":{"name":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",61,{"inputs":[{"name":"u32"}],"output":{"name":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",61,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"extend","","",61,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"resize"}}],[11,"from_raw","","",61,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"cmp","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"ordering"}}],[11,"hash","","",62,null],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",62,{"inputs":[],"output":{"name":"transient"}}],[11,"all","","Returns the set containing all flags.",62,{"inputs":[],"output":{"name":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",62,{"inputs":[{"name":"u32"}],"output":{"name":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",62,{"inputs":[{"name":"self"},{"name":"transient"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",62,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"extend","","",62,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",62,{"inputs":[{"name":"t"}],"output":{"name":"transient"}}],[11,"from_raw","","",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmethod"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",19,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",19,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"pong","","respond to a ping event",60,null],[11,"_move","","start an interactive move",60,null],[11,"resize","","start an interactive resize",60,null],[11,"set_toplevel","","make the surface a toplevel surface",60,null],[11,"set_transient","","make the surface a transient surface",60,null],[11,"set_fullscreen","","make the surface a fullscreen surface",60,null],[11,"set_popup","","make the surface a popup surface",60,null],[11,"set_maximized","","make the surface a maximized surface",60,null],[11,"set_title","","set surface title",60,null],[11,"set_class","","set surface class",60,null],[11,"enter","wayland_client::protocol::wl_surface","surface enters an output",22,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlsurface"},{"name":"wloutput"}],"output":null}],[11,"leave","","surface leaves an output",22,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlsurface"},{"name":"wloutput"}],"output":null}],[11,"ptr","","",63,null],[11,"from_ptr_new","","",63,null],[11,"from_ptr_initialized","","",63,null],[11,"interface_ptr","","",63,null],[11,"interface_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",63,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",63,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",63,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",63,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",63,null],[11,"get_user_data","","",63,null],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",21,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","delete surface",63,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"attach","","set the surface contents",63,{"inputs":[{"name":"self"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"damage","","mark part of the surface damaged",63,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"frame","","request a frame throttling hint",63,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_opaque_region","","set opaque region",63,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"set_input_region","","set input region",63,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"commit","","commit pending surface state",63,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_buffer_transform","","sets the buffer transformation",63,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"requestresult"}}],[11,"set_buffer_scale","","sets the buffer scaling factor",63,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",63,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"capabilities","wayland_client::protocol::wl_seat","seat capabilities changed",23,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlseat"},{"name":"capability"}],"output":null}],[11,"name","","unique identifier for this seat",23,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlseat"},{"name":"string"}],"output":null}],[11,"ptr","","",64,null],[11,"from_ptr_new","","",64,null],[11,"from_ptr_initialized","","",64,null],[11,"interface_ptr","","",64,null],[11,"interface_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",64,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",64,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",64,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",64,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"bool"}}],[11,"set_user_data","","",64,null],[11,"get_user_data","","",64,null],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"option"}}],[11,"lt","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"le","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"gt","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ge","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"cmp","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"ordering"}}],[11,"hash","","",65,null],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",65,{"inputs":[],"output":{"name":"capability"}}],[11,"all","","Returns the set containing all flags.",65,{"inputs":[],"output":{"name":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",65,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",65,{"inputs":[{"name":"u32"}],"output":{"name":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",65,{"inputs":[{"name":"self"},{"name":"capability"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",65,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"extend","","",65,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",65,{"inputs":[{"name":"t"}],"output":{"name":"capability"}}],[11,"from_raw","","",65,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_pointer","","return pointer object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_keyboard","","return keyboard object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_touch","","return touch object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"release","","release the seat object",64,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"enter","wayland_client::protocol::wl_pointer","enter event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"leave","","leave event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"motion","","pointer motion event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"button","","pointer button event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"axis","","axis event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"axis"},{"name":"f64"}],"output":null}],[11,"frame","","end of a pointer event sequence",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"}],"output":null}],[11,"axis_source","","axis source event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"axissource"}],"output":null}],[11,"axis_stop","","axis stop event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"u32"},{"name":"axis"}],"output":null}],[11,"axis_discrete","","axis click event",28,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlpointer"},{"name":"axis"},{"name":"i32"}],"output":null}],[11,"ptr","","",66,null],[11,"from_ptr_new","","",66,null],[11,"from_ptr_initialized","","",66,null],[11,"interface_ptr","","",66,null],[11,"interface_name","","",66,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",66,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",66,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",66,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",66,null],[11,"get_user_data","","",66,null],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",24,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",25,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"from_raw","","",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"axissource"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"bool"}}],[11,"from_raw","","",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_cursor","","set the pointer surface",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"release","","release the pointer object",66,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"keymap","wayland_client::protocol::wl_keyboard","keyboard mapping",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"keymapformat"},{"name":"rawfd"},{"name":"u32"}],"output":null}],[11,"enter","","enter event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"},{"name":"vec"}],"output":null}],[11,"leave","","leave event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"key","","key event",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"keystate"}],"output":null}],[11,"modifiers","","modifier and group state",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"repeat_info","","repeat rate and delay",31,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wlkeyboard"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","",67,null],[11,"from_ptr_new","","",67,null],[11,"from_ptr_initialized","","",67,null],[11,"interface_ptr","","",67,null],[11,"interface_name","","",67,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",67,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",67,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",67,{"inputs":[{"name":"self"},{"name":"wlkeyboard"}],"output":{"name":"bool"}}],[11,"set_user_data","","",67,null],[11,"get_user_data","","",67,null],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"keymapformat"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"from_raw","","",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"keystate"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"from_raw","","",30,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"release","","release the keyboard object",67,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"down","wayland_client::protocol::wl_touch","touch down event and beginning of a touch sequence",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"up","","end of a touch event sequence",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"motion","","update of touch point coordinates",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"},{"name":"u32"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"frame","","end of touch frame event",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"}],"output":null}],[11,"cancel","","touch session cancelled",32,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wltouch"}],"output":null}],[11,"ptr","","",68,null],[11,"from_ptr_new","","",68,null],[11,"from_ptr_initialized","","",68,null],[11,"interface_ptr","","",68,null],[11,"interface_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",68,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",68,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",68,{"inputs":[{"name":"self"},{"name":"wltouch"}],"output":{"name":"bool"}}],[11,"set_user_data","","",68,null],[11,"get_user_data","","",68,null],[11,"release","","release the touch object",68,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"geometry","wayland_client::protocol::wl_output","properties of the output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"subpixel"},{"name":"string"},{"name":"string"},{"name":"transform"}],"output":null}],[11,"mode","","advertise available modes for the output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"mode"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"done","","sent all information about output",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"}],"output":null}],[11,"scale","","output scaling properties",35,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wloutput"},{"name":"i32"}],"output":null}],[11,"ptr","","",69,null],[11,"from_ptr_new","","",69,null],[11,"from_ptr_initialized","","",69,null],[11,"interface_ptr","","",69,null],[11,"interface_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",69,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",69,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",69,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"bool"}}],[11,"set_user_data","","",69,null],[11,"get_user_data","","",69,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"subpixel"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"subpixel"}],"output":{"name":"bool"}}],[11,"from_raw","","",33,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_raw","","",34,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",34,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"option"}}],[11,"lt","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",70,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",70,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",70,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",70,{"inputs":[{"name":"u32"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",70,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",70,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",70,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",70,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[11,"from_raw","","",70,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"release","","release the output object",69,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_region","",71,null],[11,"from_ptr_new","","",71,null],[11,"from_ptr_initialized","","",71,null],[11,"interface_ptr","","",71,null],[11,"interface_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",71,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",71,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",71,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",71,{"inputs":[{"name":"self"},{"name":"wlregion"}],"output":{"name":"bool"}}],[11,"set_user_data","","",71,null],[11,"get_user_data","","",71,null],[11,"destroy","","destroy region",71,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"add","","add rectangle to region",71,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"subtract","","subtract rectangle from region",71,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_subcompositor","",72,null],[11,"from_ptr_new","","",72,null],[11,"from_ptr_initialized","","",72,null],[11,"interface_ptr","","",72,null],[11,"interface_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",72,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",72,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",72,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",72,{"inputs":[{"name":"self"},{"name":"wlsubcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",72,null],[11,"get_user_data","","",72,null],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",36,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","unbind from the subcompositor interface",72,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_subsurface","","give a surface the role sub-surface",72,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_client::protocol::wl_subsurface","",73,null],[11,"from_ptr_new","","",73,null],[11,"from_ptr_initialized","","",73,null],[11,"interface_ptr","","",73,null],[11,"interface_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",73,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",73,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",73,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",73,{"inputs":[{"name":"self"},{"name":"wlsubsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",73,null],[11,"get_user_data","","",73,null],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",37,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",37,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","remove sub-surface interface",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_position","","reposition the sub-surface",73,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"place_above","","restack the sub-surface",73,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"place_below","","restack the sub-surface",73,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"set_sync","","set sub-surface to synchronized mode",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_desync","","set sub-surface to desynchronized mode",73,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[0,"sys","wayland_client","Reexports of types and objects from wayland-sys",null,null],[8,"Init","","A trait to initialize handlers after they've been inserted in an event queue",null,null],[10,"init","","Init the handler",74,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"usize"}],"output":null}],[8,"Proxy","","Common routines for wayland proxy objects.",null,null],[10,"ptr","","Pointer to the underlying wayland proxy object",75,null],[10,"from_ptr_new","","Create an instance from a wayland pointer",75,null],[10,"from_ptr_initialized","","Create an instance from a wayland pointer",75,null],[10,"interface_ptr","","Pointer to the interface representation",75,null],[10,"interface_name","","Internal wayland name of this interface",75,{"inputs":[],"output":{"name":"str"}}],[10,"supported_version","","Max version of this interface supported",75,{"inputs":[],"output":{"name":"u32"}}],[10,"version","","Current version of the interface this proxy is instantiated with",75,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"status","","Check if the proxy behind this handle is actually still alive",75,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[10,"equals","","Check of two handles are actually the same wayland object",75,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"set_user_data","","Set a pointer associated as user data on this proxy",75,null],[10,"get_user_data","","Get the pointer associated as user data on this proxy",75,null],[11,"clone","","Clone this proxy handle",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone_unchecked","","Unsafely clone this proxy handle",75,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Handler","","Generic handler trait",null,null],[10,"message","","Dispatch a message.",76,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"expect","","Assert that result is successfull and extract the value.",3,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"t"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"liveness"}],"output":{"name":"bool"}}],[14,"client_declare_handler","","Synonym of the declare_handler! macro",null,null],[14,"declare_handler","","Registers a handler type so it can be used in event queue",null,null],[14,"client_declare_delegating_handler","","Synonym of the declare_delegating_handler! macro",null,null],[14,"declare_delegating_handler","","Registers a handler type so it as delegating to one of its fields",null,null],[14,"wayland_env","","Create an environment handling struct",null,null]],"paths":[[4,"ConnectError"],[4,"FatalError"],[4,"RegisterStatus"],[4,"RequestResult"],[4,"Liveness"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Error"],[4,"Format"],[8,"Handler"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[4,"FullscreenMethod"],[8,"Handler"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[8,"Handler"],[4,"KeymapFormat"],[4,"KeyState"],[8,"Handler"],[8,"Handler"],[4,"Subpixel"],[4,"Transform"],[8,"Handler"],[4,"Error"],[4,"Error"],[3,"WlDisplay"],[3,"EventQueueHandle"],[3,"StateGuard"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"EnvHandler"],[3,"WlEglSurface"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"WlRegistry"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"DndAction"],[3,"WlShell"],[3,"WlShellSurface"],[3,"Resize"],[3,"Transient"],[3,"WlSurface"],[3,"WlSeat"],[3,"Capability"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"Mode"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"],[8,"Init"],[8,"Proxy"],[8,"Handler"]]};
searchIndex["wayland_protocols"] = {"doc":"This crate provides bindings to the official wayland protocol extensions provided in https://cgit.freedesktop.org/wayland/wayland-protocols","items":[[0,"unstable","wayland_protocols","",null,null],[0,"fullscreen_shell","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::fullscreen_shell","",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::client","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::client::zwp_fullscreen_shell_v1","",null,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","",0,null],[13,"CursorPlane","","",0,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","",1,null],[13,"Center","","",1,null],[13,"Zoom","","",1,null],[13,"ZoomCrop","","",1,null],[13,"Stretch","","",1,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","",2,null],[8,"Handler","","",null,null],[11,"capability","","advertises a capability of the compositor",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellv1"},{"name":"u32"}],"output":null}],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::client","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::client::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[8,"Handler","","",null,null],[11,"mode_successful","","mode switch succeeded",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"mode_failed","","mode switch failed",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"present_cancelled","","mode switch cancelled",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[0,"server","wayland_protocols::unstable::fullscreen_shell","",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::server","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::server::zwp_fullscreen_shell_v1","",null,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","",5,null],[13,"CursorPlane","","",5,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","",6,null],[13,"Center","","",6,null],[13,"Zoom","","",6,null],[13,"ZoomCrop","","",6,null],[13,"Stretch","","",6,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","",7,null],[8,"Handler","","",null,null],[11,"release","","release the wl_fullscreen_shell interface",8,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpfullscreenshellv1"}],"output":null}],[11,"present_surface","","present surface for display",8,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpfullscreenshellv1"},{"name":"option"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"present_surface_for_mode","","present surface for display at a particular mode",8,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpfullscreenshellv1"},{"name":"wlsurface"},{"name":"wloutput"},{"name":"i32"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::server","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::server::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[11,"capability","wayland_protocols::unstable::fullscreen_shell::client::zwp_fullscreen_shell_v1","advertises a capability of the compositor",3,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellv1"},{"name":"u32"}],"output":null}],[11,"ptr","","",9,null],[11,"from_ptr_new","","",9,null],[11,"from_ptr_initialized","","",9,null],[11,"interface_ptr","","",9,null],[11,"interface_name","","",9,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",9,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",9,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",9,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",9,null],[11,"get_user_data","","",9,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",0,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"presentmethod"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"presentmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",1,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",2,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"release","","release the wl_fullscreen_shell interface",9,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"present_surface","","present surface for display",9,{"inputs":[{"name":"self"},{"name":"option"},{"name":"u32"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"present_surface_for_mode","","present surface for display at a particular mode",9,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wloutput"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"mode_successful","wayland_protocols::unstable::fullscreen_shell::client::zwp_fullscreen_shell_mode_feedback_v1","mode switch succeeded",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"mode_failed","","mode switch failed",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"present_cancelled","","mode switch cancelled",4,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"ptr","","",10,null],[11,"from_ptr_new","","",10,null],[11,"from_ptr_initialized","","",10,null],[11,"interface_ptr","","",10,null],[11,"interface_name","","",10,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",10,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",10,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",10,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",10,null],[11,"get_user_data","","",10,null],[11,"release","wayland_protocols::unstable::fullscreen_shell::server::zwp_fullscreen_shell_v1","release the wl_fullscreen_shell interface",8,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpfullscreenshellv1"}],"output":null}],[11,"present_surface","","present surface for display",8,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpfullscreenshellv1"},{"name":"option"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"present_surface_for_mode","","present surface for display at a particular mode",8,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpfullscreenshellv1"},{"name":"wlsurface"},{"name":"wloutput"},{"name":"i32"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":null}],[11,"ptr","","",11,null],[11,"from_ptr_new","","",11,null],[11,"from_ptr_initialized","","",11,null],[11,"interface_ptr","","",11,null],[11,"interface_name","","",11,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",11,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",11,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",11,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",11,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",11,null],[11,"get_user_data","","",11,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",5,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"presentmethod"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"presentmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",6,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",7,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",7,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"capability","","advertises a capability of the compositor",11,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::fullscreen_shell::server::zwp_fullscreen_shell_mode_feedback_v1","",12,null],[11,"from_ptr_new","","",12,null],[11,"from_ptr_initialized","","",12,null],[11,"interface_ptr","","",12,null],[11,"interface_name","","",12,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",12,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",12,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",12,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",12,{"inputs":[{"name":"self"},{"name":"zwpfullscreenshellmodefeedbackv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",12,null],[11,"get_user_data","","",12,null],[11,"mode_successful","","mode switch succeeded",12,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"mode_failed","","mode switch failed",12,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"present_cancelled","","mode switch cancelled",12,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"idle_inhibit","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::idle_inhibit","",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::client","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::client::zwp_idle_inhibit_manager_v1","",null,null],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::client","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::client::zwp_idle_inhibitor_v1","",null,null],[0,"server","wayland_protocols::unstable::idle_inhibit","",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::server","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::server::zwp_idle_inhibit_manager_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the idle inhibitor object",13,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpidleinhibitmanagerv1"}],"output":null}],[11,"create_inhibitor","","create a new inhibitor object",13,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpidleinhibitmanagerv1"},{"name":"zwpidleinhibitorv1"},{"name":"wlsurface"}],"output":null}],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::server","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::server::zwp_idle_inhibitor_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the idle inhibitor object",14,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpidleinhibitorv1"}],"output":null}],[11,"ptr","wayland_protocols::unstable::idle_inhibit::client::zwp_idle_inhibit_manager_v1","",15,null],[11,"from_ptr_new","","",15,null],[11,"from_ptr_initialized","","",15,null],[11,"interface_ptr","","",15,null],[11,"interface_name","","",15,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",15,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",15,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",15,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",15,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",15,null],[11,"get_user_data","","",15,null],[11,"destroy","","destroy the idle inhibitor object",15,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_inhibitor","","create a new inhibitor object",15,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::idle_inhibit::client::zwp_idle_inhibitor_v1","",16,null],[11,"from_ptr_new","","",16,null],[11,"from_ptr_initialized","","",16,null],[11,"interface_ptr","","",16,null],[11,"interface_name","","",16,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",16,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",16,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",16,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitorv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",16,null],[11,"get_user_data","","",16,null],[11,"destroy","","destroy the idle inhibitor object",16,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"destroy","wayland_protocols::unstable::idle_inhibit::server::zwp_idle_inhibit_manager_v1","destroy the idle inhibitor object",13,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpidleinhibitmanagerv1"}],"output":null}],[11,"create_inhibitor","","create a new inhibitor object",13,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpidleinhibitmanagerv1"},{"name":"zwpidleinhibitorv1"},{"name":"wlsurface"}],"output":null}],[11,"ptr","","",17,null],[11,"from_ptr_new","","",17,null],[11,"from_ptr_initialized","","",17,null],[11,"interface_ptr","","",17,null],[11,"interface_name","","",17,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",17,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",17,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",17,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",17,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",17,null],[11,"get_user_data","","",17,null],[11,"destroy","wayland_protocols::unstable::idle_inhibit::server::zwp_idle_inhibitor_v1","destroy the idle inhibitor object",14,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpidleinhibitorv1"}],"output":null}],[11,"ptr","","",18,null],[11,"from_ptr_new","","",18,null],[11,"from_ptr_initialized","","",18,null],[11,"interface_ptr","","",18,null],[11,"interface_name","","",18,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",18,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",18,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",18,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",18,{"inputs":[{"name":"self"},{"name":"zwpidleinhibitorv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",18,null],[11,"get_user_data","","",18,null],[0,"input_method","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::input_method","",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::client","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::client::zwp_input_method_context_v1","",null,null],[8,"Handler","","",null,null],[11,"surrounding_text","","surrounding text event",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"string"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"reset","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"content_type","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"invoke_action","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"commit_state","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"}],"output":null}],[11,"preferred_language","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"string"}],"output":null}],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::client","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::client::zwp_input_method_v1","",null,null],[8,"Handler","","",null,null],[11,"activate","","activate event",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodv1"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"deactivate","","deactivate event",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodv1"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::client","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::client::zwp_input_panel_v1","",null,null],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::client","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::client::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",21,null],[0,"server","wayland_protocols::unstable::input_method","",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::server","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::server::zwp_input_method_context_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"commit_string","","commit string",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"preedit_string","","pre-edit string",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":null}],[11,"preedit_styling","","pre-edit styling",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"preedit_cursor","","pre-edit cursor",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"i32"}],"output":null}],[11,"delete_surrounding_text","","delete text",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"cursor_position","","set cursor to a new position",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"modifiers_map","","",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"vec"}],"output":null}],[11,"keysym","","keysym",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"grab_keyboard","","grab hardware keyboard",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"wlkeyboard"}],"output":null}],[11,"key","","forward key event",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"modifiers","","forward modifiers event",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"language","","",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"text_direction","","",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::server","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::server::zwp_input_method_v1","",null,null],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::server","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::server::zwp_input_panel_v1","",null,null],[8,"Handler","","",null,null],[11,"get_input_panel_surface","","",23,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputpanelv1"},{"name":"zwpinputpanelsurfacev1"},{"name":"wlsurface"}],"output":null}],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::server","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::server::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",24,null],[8,"Handler","","",null,null],[11,"set_toplevel","","set the surface type as a keyboard",25,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputpanelsurfacev1"},{"name":"wloutput"},{"name":"u32"}],"output":null}],[11,"set_overlay_panel","","set the surface type as an overlay panel",25,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputpanelsurfacev1"}],"output":null}],[11,"surrounding_text","wayland_protocols::unstable::input_method::client::zwp_input_method_context_v1","surrounding text event",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"string"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"reset","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"content_type","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"invoke_action","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"commit_state","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"}],"output":null}],[11,"preferred_language","","",19,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodcontextv1"},{"name":"string"}],"output":null}],[11,"ptr","","",26,null],[11,"from_ptr_new","","",26,null],[11,"from_ptr_initialized","","",26,null],[11,"interface_ptr","","",26,null],[11,"interface_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",26,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",26,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",26,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",26,null],[11,"get_user_data","","",26,null],[11,"destroy","","",26,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"commit_string","","commit string",26,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"preedit_string","","pre-edit string",26,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"preedit_styling","","pre-edit styling",26,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"preedit_cursor","","pre-edit cursor",26,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"delete_surrounding_text","","delete text",26,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"cursor_position","","set cursor to a new position",26,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"modifiers_map","","",26,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"requestresult"}}],[11,"keysym","","keysym",26,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"grab_keyboard","","grab hardware keyboard",26,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"key","","forward key event",26,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"modifiers","","forward modifiers event",26,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"language","","",26,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"text_direction","","",26,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"activate","wayland_protocols::unstable::input_method::client::zwp_input_method_v1","activate event",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodv1"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"deactivate","","deactivate event",20,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpinputmethodv1"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"ptr","","",27,null],[11,"from_ptr_new","","",27,null],[11,"from_ptr_initialized","","",27,null],[11,"interface_ptr","","",27,null],[11,"interface_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",27,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",27,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",27,{"inputs":[{"name":"self"},{"name":"zwpinputmethodv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",27,null],[11,"get_user_data","","",27,null],[11,"ptr","wayland_protocols::unstable::input_method::client::zwp_input_panel_v1","",28,null],[11,"from_ptr_new","","",28,null],[11,"from_ptr_initialized","","",28,null],[11,"interface_ptr","","",28,null],[11,"interface_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",28,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",28,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",28,{"inputs":[{"name":"self"},{"name":"zwpinputpanelv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",28,null],[11,"get_user_data","","",28,null],[11,"get_input_panel_surface","","",28,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"zwpinputpanelsurfacev1"}}],[11,"ptr","wayland_protocols::unstable::input_method::client::zwp_input_panel_surface_v1","",29,null],[11,"from_ptr_new","","",29,null],[11,"from_ptr_initialized","","",29,null],[11,"interface_ptr","","",29,null],[11,"interface_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",29,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",29,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",29,{"inputs":[{"name":"self"},{"name":"zwpinputpanelsurfacev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",29,null],[11,"get_user_data","","",29,null],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",21,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",21,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_toplevel","","set the surface type as a keyboard",29,null],[11,"set_overlay_panel","","set the surface type as an overlay panel",29,null],[11,"destroy","wayland_protocols::unstable::input_method::server::zwp_input_method_context_v1","",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"}],"output":null}],[11,"commit_string","","commit string",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"preedit_string","","pre-edit string",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":null}],[11,"preedit_styling","","pre-edit styling",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"preedit_cursor","","pre-edit cursor",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"i32"}],"output":null}],[11,"delete_surrounding_text","","delete text",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"cursor_position","","set cursor to a new position",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"modifiers_map","","",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"vec"}],"output":null}],[11,"keysym","","keysym",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"grab_keyboard","","grab hardware keyboard",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"wlkeyboard"}],"output":null}],[11,"key","","forward key event",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"modifiers","","forward modifiers event",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"language","","",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"text_direction","","",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputmethodcontextv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",30,null],[11,"from_ptr_new","","",30,null],[11,"from_ptr_initialized","","",30,null],[11,"interface_ptr","","",30,null],[11,"interface_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",30,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",30,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",30,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",30,null],[11,"get_user_data","","",30,null],[11,"surrounding_text","","surrounding text event",30,{"inputs":[{"name":"self"},{"name":"string"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"reset","","",30,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"content_type","","",30,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"invoke_action","","",30,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"commit_state","","",30,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"preferred_language","","",30,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::unstable::input_method::server::zwp_input_method_v1","",31,null],[11,"from_ptr_new","","",31,null],[11,"from_ptr_initialized","","",31,null],[11,"interface_ptr","","",31,null],[11,"interface_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",31,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",31,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",31,{"inputs":[{"name":"self"},{"name":"zwpinputmethodv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",31,null],[11,"get_user_data","","",31,null],[11,"activate","","activate event",31,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"eventresult"}}],[11,"deactivate","","deactivate event",31,{"inputs":[{"name":"self"},{"name":"zwpinputmethodcontextv1"}],"output":{"name":"eventresult"}}],[11,"get_input_panel_surface","wayland_protocols::unstable::input_method::server::zwp_input_panel_v1","",23,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputpanelv1"},{"name":"zwpinputpanelsurfacev1"},{"name":"wlsurface"}],"output":null}],[11,"ptr","","",32,null],[11,"from_ptr_new","","",32,null],[11,"from_ptr_initialized","","",32,null],[11,"interface_ptr","","",32,null],[11,"interface_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",32,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",32,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",32,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",32,{"inputs":[{"name":"self"},{"name":"zwpinputpanelv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",32,null],[11,"get_user_data","","",32,null],[11,"set_toplevel","wayland_protocols::unstable::input_method::server::zwp_input_panel_surface_v1","set the surface type as a keyboard",25,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputpanelsurfacev1"},{"name":"wloutput"},{"name":"u32"}],"output":null}],[11,"set_overlay_panel","","set the surface type as an overlay panel",25,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpinputpanelsurfacev1"}],"output":null}],[11,"ptr","","",33,null],[11,"from_ptr_new","","",33,null],[11,"from_ptr_initialized","","",33,null],[11,"interface_ptr","","",33,null],[11,"interface_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",33,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",33,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",33,{"inputs":[{"name":"self"},{"name":"zwpinputpanelsurfacev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",33,null],[11,"get_user_data","","",33,null],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"position"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"position"}],"output":{"name":"bool"}}],[11,"from_raw","","",24,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[0,"linux_dmabuf","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::linux_dmabuf","",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::client","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::client::zwp_linux_dmabuf_v1","",null,null],[8,"Handler","","",null,null],[11,"format","","supported buffer format",34,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxdmabufv1"},{"name":"u32"}],"output":null}],[11,"modifier","","supported buffer format modifier",34,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxdmabufv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::client","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::client::zwp_linux_buffer_params_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","",35,null],[13,"PlaneIdx","","",35,null],[13,"PlaneSet","","",35,null],[13,"Incomplete","","",35,null],[13,"InvalidFormat","","",35,null],[13,"InvalidDimensions","","",35,null],[13,"OutOfBounds","","",35,null],[13,"InvalidWlBuffer","","",35,null],[4,"Flags","","",null,null],[13,"YInvert","","",36,null],[13,"Interlaced","","",36,null],[13,"BottomFirst","","",36,null],[8,"Handler","","",null,null],[11,"created","","buffer creation succeeded",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxbufferparamsv1"},{"name":"wlbuffer"}],"output":null}],[11,"failed","","buffer creation failed",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxbufferparamsv1"}],"output":null}],[0,"server","wayland_protocols::unstable::linux_dmabuf","",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::server","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::server::zwp_linux_dmabuf_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","unbind the factory",38,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxdmabufv1"}],"output":null}],[11,"create_params","","create a temporary object for buffer parameters",38,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxdmabufv1"},{"name":"zwplinuxbufferparamsv1"}],"output":null}],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::server","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::server::zwp_linux_buffer_params_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","",39,null],[13,"PlaneIdx","","",39,null],[13,"PlaneSet","","",39,null],[13,"Incomplete","","",39,null],[13,"InvalidFormat","","",39,null],[13,"InvalidDimensions","","",39,null],[13,"OutOfBounds","","",39,null],[13,"InvalidWlBuffer","","",39,null],[4,"Flags","","",null,null],[13,"YInvert","","",40,null],[13,"Interlaced","","",40,null],[13,"BottomFirst","","",40,null],[8,"Handler","","",null,null],[11,"destroy","","delete this object, used or not",41,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxbufferparamsv1"}],"output":null}],[11,"add","","add a dmabuf to the temporary set",41,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxbufferparamsv1"},{"name":"rawfd"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"create","","create a wl_buffer from the given dmabufs",41,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxbufferparamsv1"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"create_immed","","immediately create a wl_buffer from the given dmabufs",41,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxbufferparamsv1"},{"name":"wlbuffer"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"format","wayland_protocols::unstable::linux_dmabuf::client::zwp_linux_dmabuf_v1","supported buffer format",34,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxdmabufv1"},{"name":"u32"}],"output":null}],[11,"modifier","","supported buffer format modifier",34,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxdmabufv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",42,null],[11,"from_ptr_new","","",42,null],[11,"from_ptr_initialized","","",42,null],[11,"interface_ptr","","",42,null],[11,"interface_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",42,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",42,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",42,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",42,{"inputs":[{"name":"self"},{"name":"zwplinuxdmabufv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",42,null],[11,"get_user_data","","",42,null],[11,"destroy","","unbind the factory",42,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_params","","create a temporary object for buffer parameters",42,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"created","wayland_protocols::unstable::linux_dmabuf::client::zwp_linux_buffer_params_v1","buffer creation succeeded",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxbufferparamsv1"},{"name":"wlbuffer"}],"output":null}],[11,"failed","","buffer creation failed",37,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplinuxbufferparamsv1"}],"output":null}],[11,"ptr","","",43,null],[11,"from_ptr_new","","",43,null],[11,"from_ptr_initialized","","",43,null],[11,"interface_ptr","","",43,null],[11,"interface_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",43,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",43,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",43,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",43,{"inputs":[{"name":"self"},{"name":"zwplinuxbufferparamsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",43,null],[11,"get_user_data","","",43,null],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",35,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",35,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"from_raw","","",36,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","delete this object, used or not",43,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"add","","add a dmabuf to the temporary set",43,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"create","","create a wl_buffer from the given dmabufs",43,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"create_immed","","immediately create a wl_buffer from the given dmabufs",43,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","wayland_protocols::unstable::linux_dmabuf::server::zwp_linux_dmabuf_v1","unbind the factory",38,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxdmabufv1"}],"output":null}],[11,"create_params","","create a temporary object for buffer parameters",38,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxdmabufv1"},{"name":"zwplinuxbufferparamsv1"}],"output":null}],[11,"ptr","","",44,null],[11,"from_ptr_new","","",44,null],[11,"from_ptr_initialized","","",44,null],[11,"interface_ptr","","",44,null],[11,"interface_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",44,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",44,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",44,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",44,{"inputs":[{"name":"self"},{"name":"zwplinuxdmabufv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",44,null],[11,"get_user_data","","",44,null],[11,"format","","supported buffer format",44,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"modifier","","supported buffer format modifier",44,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::linux_dmabuf::server::zwp_linux_buffer_params_v1","delete this object, used or not",41,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxbufferparamsv1"}],"output":null}],[11,"add","","add a dmabuf to the temporary set",41,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxbufferparamsv1"},{"name":"rawfd"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"create","","create a wl_buffer from the given dmabufs",41,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxbufferparamsv1"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"create_immed","","immediately create a wl_buffer from the given dmabufs",41,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplinuxbufferparamsv1"},{"name":"wlbuffer"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",45,null],[11,"from_ptr_new","","",45,null],[11,"from_ptr_initialized","","",45,null],[11,"interface_ptr","","",45,null],[11,"interface_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",45,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",45,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",45,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",45,{"inputs":[{"name":"self"},{"name":"zwplinuxbufferparamsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",45,null],[11,"get_user_data","","",45,null],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",39,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"from_raw","","",40,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"created","","buffer creation succeeded",45,{"inputs":[{"name":"self"},{"name":"wlbuffer"}],"output":{"name":"eventresult"}}],[11,"failed","","buffer creation failed",45,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",null,null],[0,"client","wayland_protocols::unstable::pointer_constraints","",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::client","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::client::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","",46,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",47,null],[13,"Persistent","","the pointer constraint may reactivate",47,null],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::client","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::client::zwp_locked_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"locked","","lock activation event",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplockedpointerv1"}],"output":null}],[11,"unlocked","","lock deactivation event",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplockedpointerv1"}],"output":null}],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::client","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::client::zwp_confined_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"confined","","pointer confined",49,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"unconfined","","pointer unconfined",49,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpconfinedpointerv1"}],"output":null}],[0,"server","wayland_protocols::unstable::pointer_constraints","",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::server","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::server::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","",50,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",51,null],[13,"Persistent","","the pointer constraint may reactivate",51,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the pointer constraints manager object",52,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointerconstraintsv1"}],"output":null}],[11,"lock_pointer","","lock pointer to a position",52,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointerconstraintsv1"},{"name":"zwplockedpointerv1"},{"name":"wlsurface"},{"name":"wlpointer"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"confine_pointer","","confine pointer to a region",52,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointerconstraintsv1"},{"name":"zwpconfinedpointerv1"},{"name":"wlsurface"},{"name":"wlpointer"},{"name":"option"},{"name":"u32"}],"output":null}],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::server","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::server::zwp_locked_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the locked pointer object",53,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplockedpointerv1"}],"output":null}],[11,"set_cursor_position_hint","","set the pointer cursor position hint",53,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplockedpointerv1"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_region","","set a new lock region",53,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplockedpointerv1"},{"name":"option"}],"output":null}],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::server","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::server::zwp_confined_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the confined pointer object",54,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"set_region","","set a new confine region",54,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpconfinedpointerv1"},{"name":"option"}],"output":null}],[11,"ptr","wayland_protocols::unstable::pointer_constraints::client::zwp_pointer_constraints_v1","",55,null],[11,"from_ptr_new","","",55,null],[11,"from_ptr_initialized","","",55,null],[11,"interface_ptr","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",55,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",55,{"inputs":[{"name":"self"},{"name":"zwppointerconstraintsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",55,null],[11,"get_user_data","","",55,null],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",46,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"from_raw","","",47,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the pointer constraints manager object",55,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"lock_pointer","","lock pointer to a position",55,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlpointer"},{"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"confine_pointer","","confine pointer to a region",55,{"inputs":[{"name":"self"},{"name":"wlsurface"},{"name":"wlpointer"},{"name":"option"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"locked","wayland_protocols::unstable::pointer_constraints::client::zwp_locked_pointer_v1","lock activation event",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplockedpointerv1"}],"output":null}],[11,"unlocked","","lock deactivation event",48,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwplockedpointerv1"}],"output":null}],[11,"ptr","","",56,null],[11,"from_ptr_new","","",56,null],[11,"from_ptr_initialized","","",56,null],[11,"interface_ptr","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",56,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",56,{"inputs":[{"name":"self"},{"name":"zwplockedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",56,null],[11,"get_user_data","","",56,null],[11,"destroy","","destroy the locked pointer object",56,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_cursor_position_hint","","set the pointer cursor position hint",56,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"requestresult"}}],[11,"set_region","","set a new lock region",56,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"confined","wayland_protocols::unstable::pointer_constraints::client::zwp_confined_pointer_v1","pointer confined",49,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"unconfined","","pointer unconfined",49,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"ptr","","",57,null],[11,"from_ptr_new","","",57,null],[11,"from_ptr_initialized","","",57,null],[11,"interface_ptr","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",57,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",57,{"inputs":[{"name":"self"},{"name":"zwpconfinedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",57,null],[11,"get_user_data","","",57,null],[11,"destroy","","destroy the confined pointer object",57,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_region","","set a new confine region",57,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"destroy","wayland_protocols::unstable::pointer_constraints::server::zwp_pointer_constraints_v1","destroy the pointer constraints manager object",52,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointerconstraintsv1"}],"output":null}],[11,"lock_pointer","","lock pointer to a position",52,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointerconstraintsv1"},{"name":"zwplockedpointerv1"},{"name":"wlsurface"},{"name":"wlpointer"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"confine_pointer","","confine pointer to a region",52,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointerconstraintsv1"},{"name":"zwpconfinedpointerv1"},{"name":"wlsurface"},{"name":"wlpointer"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"ptr","","",58,null],[11,"from_ptr_new","","",58,null],[11,"from_ptr_initialized","","",58,null],[11,"interface_ptr","","",58,null],[11,"interface_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",58,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",58,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",58,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",58,{"inputs":[{"name":"self"},{"name":"zwppointerconstraintsv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",58,null],[11,"get_user_data","","",58,null],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",50,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",50,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"lifetime"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"from_raw","","",51,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",51,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","wayland_protocols::unstable::pointer_constraints::server::zwp_locked_pointer_v1","destroy the locked pointer object",53,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplockedpointerv1"}],"output":null}],[11,"set_cursor_position_hint","","set the pointer cursor position hint",53,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplockedpointerv1"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_region","","set a new lock region",53,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwplockedpointerv1"},{"name":"option"}],"output":null}],[11,"ptr","","",59,null],[11,"from_ptr_new","","",59,null],[11,"from_ptr_initialized","","",59,null],[11,"interface_ptr","","",59,null],[11,"interface_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",59,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",59,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",59,{"inputs":[{"name":"self"},{"name":"zwplockedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",59,null],[11,"get_user_data","","",59,null],[11,"locked","","lock activation event",59,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"unlocked","","lock deactivation event",59,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::pointer_constraints::server::zwp_confined_pointer_v1","destroy the confined pointer object",54,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpconfinedpointerv1"}],"output":null}],[11,"set_region","","set a new confine region",54,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwpconfinedpointerv1"},{"name":"option"}],"output":null}],[11,"ptr","","",60,null],[11,"from_ptr_new","","",60,null],[11,"from_ptr_initialized","","",60,null],[11,"interface_ptr","","",60,null],[11,"interface_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",60,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",60,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",60,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",60,{"inputs":[{"name":"self"},{"name":"zwpconfinedpointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",60,null],[11,"get_user_data","","",60,null],[11,"confined","","pointer confined",60,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"unconfined","","pointer unconfined",60,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"pointer_gestures","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::pointer_gestures","",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::client","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gestures_v1","",null,null],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::client","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gesture_swipe_v1","",null,null],[8,"Handler","","",null,null],[11,"begin","","multi-finger swipe begin",61,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":null}],[11,"update","","multi-finger swipe motion",61,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"end","","multi-finger swipe end",61,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::client","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gesture_pinch_v1","",null,null],[8,"Handler","","",null,null],[11,"begin","","multi-finger pinch begin",62,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":null}],[11,"update","","multi-finger pinch motion",62,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"end","","multi-finger pinch end",62,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[0,"server","wayland_protocols::unstable::pointer_gestures","",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::server","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::server::zwp_pointer_gestures_v1","",null,null],[8,"Handler","","",null,null],[11,"get_swipe_gesture","","get swipe gesture",63,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointergesturesv1"},{"name":"zwppointergestureswipev1"},{"name":"wlpointer"}],"output":null}],[11,"get_pinch_gesture","","get pinch gesture",63,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointergesturesv1"},{"name":"zwppointergesturepinchv1"},{"name":"wlpointer"}],"output":null}],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::server","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::server::zwp_pointer_gesture_swipe_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the pointer swipe gesture object",64,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointergestureswipev1"}],"output":null}],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::server","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::server::zwp_pointer_gesture_pinch_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the pinch gesture object",65,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointergesturepinchv1"}],"output":null}],[11,"ptr","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gestures_v1","",66,null],[11,"from_ptr_new","","",66,null],[11,"from_ptr_initialized","","",66,null],[11,"interface_ptr","","",66,null],[11,"interface_name","","",66,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",66,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",66,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",66,{"inputs":[{"name":"self"},{"name":"zwppointergesturesv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",66,null],[11,"get_user_data","","",66,null],[11,"get_swipe_gesture","","get swipe gesture",66,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"zwppointergestureswipev1"}}],[11,"get_pinch_gesture","","get pinch gesture",66,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"zwppointergesturepinchv1"}}],[11,"begin","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe begin",61,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":null}],[11,"update","","multi-finger swipe motion",61,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"end","","multi-finger swipe end",61,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergestureswipev1"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"ptr","","",67,null],[11,"from_ptr_new","","",67,null],[11,"from_ptr_initialized","","",67,null],[11,"interface_ptr","","",67,null],[11,"interface_name","","",67,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",67,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",67,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",67,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",67,{"inputs":[{"name":"self"},{"name":"zwppointergestureswipev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",67,null],[11,"get_user_data","","",67,null],[11,"destroy","","destroy the pointer swipe gesture object",67,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"begin","wayland_protocols::unstable::pointer_gestures::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch begin",62,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":null}],[11,"update","","multi-finger pinch motion",62,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"end","","multi-finger pinch end",62,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwppointergesturepinchv1"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":null}],[11,"ptr","","",68,null],[11,"from_ptr_new","","",68,null],[11,"from_ptr_initialized","","",68,null],[11,"interface_ptr","","",68,null],[11,"interface_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",68,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",68,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",68,{"inputs":[{"name":"self"},{"name":"zwppointergesturepinchv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",68,null],[11,"get_user_data","","",68,null],[11,"destroy","","destroy the pinch gesture object",68,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_swipe_gesture","wayland_protocols::unstable::pointer_gestures::server::zwp_pointer_gestures_v1","get swipe gesture",63,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointergesturesv1"},{"name":"zwppointergestureswipev1"},{"name":"wlpointer"}],"output":null}],[11,"get_pinch_gesture","","get pinch gesture",63,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointergesturesv1"},{"name":"zwppointergesturepinchv1"},{"name":"wlpointer"}],"output":null}],[11,"ptr","","",69,null],[11,"from_ptr_new","","",69,null],[11,"from_ptr_initialized","","",69,null],[11,"interface_ptr","","",69,null],[11,"interface_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",69,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",69,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",69,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",69,{"inputs":[{"name":"self"},{"name":"zwppointergesturesv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",69,null],[11,"get_user_data","","",69,null],[11,"destroy","wayland_protocols::unstable::pointer_gestures::server::zwp_pointer_gesture_swipe_v1","destroy the pointer swipe gesture object",64,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointergestureswipev1"}],"output":null}],[11,"ptr","","",70,null],[11,"from_ptr_new","","",70,null],[11,"from_ptr_initialized","","",70,null],[11,"interface_ptr","","",70,null],[11,"interface_name","","",70,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",70,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",70,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",70,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",70,{"inputs":[{"name":"self"},{"name":"zwppointergestureswipev1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",70,null],[11,"get_user_data","","",70,null],[11,"begin","","multi-finger swipe begin",70,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"update","","multi-finger swipe motion",70,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"end","","multi-finger swipe end",70,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::pointer_gestures::server::zwp_pointer_gesture_pinch_v1","destroy the pinch gesture object",65,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwppointergesturepinchv1"}],"output":null}],[11,"ptr","","",71,null],[11,"from_ptr_new","","",71,null],[11,"from_ptr_initialized","","",71,null],[11,"interface_ptr","","",71,null],[11,"interface_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",71,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",71,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",71,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",71,{"inputs":[{"name":"self"},{"name":"zwppointergesturepinchv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",71,null],[11,"get_user_data","","",71,null],[11,"begin","","multi-finger pinch begin",71,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"update","","multi-finger pinch motion",71,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"end","","multi-finger pinch end",71,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",null,null],[0,"client","wayland_protocols::unstable::relative_pointer","",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::client","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::client::zwp_relative_pointer_manager_v1","",null,null],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::client","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::client::zwp_relative_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"relative_motion","","relative pointer motion",72,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwprelativepointerv1"},{"name":"u32"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[0,"server","wayland_protocols::unstable::relative_pointer","",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::server","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::server::zwp_relative_pointer_manager_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the relative pointer manager object",73,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwprelativepointermanagerv1"}],"output":null}],[11,"get_relative_pointer","","get a relative pointer object",73,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwprelativepointermanagerv1"},{"name":"zwprelativepointerv1"},{"name":"wlpointer"}],"output":null}],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::server","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::server::zwp_relative_pointer_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","release the relative pointer object",74,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwprelativepointerv1"}],"output":null}],[11,"ptr","wayland_protocols::unstable::relative_pointer::client::zwp_relative_pointer_manager_v1","",75,null],[11,"from_ptr_new","","",75,null],[11,"from_ptr_initialized","","",75,null],[11,"interface_ptr","","",75,null],[11,"interface_name","","",75,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",75,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",75,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",75,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",75,{"inputs":[{"name":"self"},{"name":"zwprelativepointermanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",75,null],[11,"get_user_data","","",75,null],[11,"destroy","","destroy the relative pointer manager object",75,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_relative_pointer","","get a relative pointer object",75,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"requestresult"}}],[11,"relative_motion","wayland_protocols::unstable::relative_pointer::client::zwp_relative_pointer_v1","relative pointer motion",72,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwprelativepointerv1"},{"name":"u32"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"ptr","","",76,null],[11,"from_ptr_new","","",76,null],[11,"from_ptr_initialized","","",76,null],[11,"interface_ptr","","",76,null],[11,"interface_name","","",76,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",76,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",76,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",76,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",76,{"inputs":[{"name":"self"},{"name":"zwprelativepointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",76,null],[11,"get_user_data","","",76,null],[11,"destroy","","release the relative pointer object",76,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"destroy","wayland_protocols::unstable::relative_pointer::server::zwp_relative_pointer_manager_v1","destroy the relative pointer manager object",73,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwprelativepointermanagerv1"}],"output":null}],[11,"get_relative_pointer","","get a relative pointer object",73,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwprelativepointermanagerv1"},{"name":"zwprelativepointerv1"},{"name":"wlpointer"}],"output":null}],[11,"ptr","","",77,null],[11,"from_ptr_new","","",77,null],[11,"from_ptr_initialized","","",77,null],[11,"interface_ptr","","",77,null],[11,"interface_name","","",77,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",77,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",77,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",77,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",77,{"inputs":[{"name":"self"},{"name":"zwprelativepointermanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",77,null],[11,"get_user_data","","",77,null],[11,"destroy","wayland_protocols::unstable::relative_pointer::server::zwp_relative_pointer_v1","release the relative pointer object",74,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwprelativepointerv1"}],"output":null}],[11,"ptr","","",78,null],[11,"from_ptr_new","","",78,null],[11,"from_ptr_initialized","","",78,null],[11,"interface_ptr","","",78,null],[11,"interface_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",78,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",78,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",78,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",78,{"inputs":[{"name":"self"},{"name":"zwprelativepointerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",78,null],[11,"get_user_data","","",78,null],[11,"relative_motion","","relative pointer motion",78,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",null,null],[0,"client","wayland_protocols::unstable::tablet","",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::client","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::client::zwp_tablet_manager_v2","",null,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::client","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::client::zwp_tablet_seat_v2","",null,null],[8,"Handler","","",null,null],[11,"tablet_added","","new device notification",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptabletv2"}],"output":null}],[11,"tool_added","","a new tool has been used with a tablet",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptablettoolv2"}],"output":null}],[11,"pad_added","","new pad notification",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptabletpadv2"}],"output":null}],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::client","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::client::zwp_tablet_tool_v2","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","",80,null],[13,"Eraser","","",80,null],[13,"Brush","","",80,null],[13,"Pencil","","",80,null],[13,"Airbrush","","",80,null],[13,"Finger","","",80,null],[13,"Mouse","","",80,null],[13,"Lens","","",80,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","",81,null],[13,"Pressure","","",81,null],[13,"Distance","","",81,null],[13,"Rotation","","",81,null],[13,"Slider","","",81,null],[13,"Wheel","","",81,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",82,null],[13,"Pressed","","",82,null],[4,"Error","","",null,null],[13,"Role","","",83,null],[8,"Handler","","",null,null],[11,"type_","","tool type",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"type"}],"output":null}],[11,"hardware_serial","","unique hardware serial number of the tool",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"capability","","tool capability notification",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"capability"}],"output":null}],[11,"done","","tool description events sequence complete",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"removed","","tool removed",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"proximity_in","","proximity in event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":null}],[11,"proximity_out","","proximity out event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"down","","tablet tool is making contact",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"up","","tablet tool is no longer making contact",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"motion","","motion event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"pressure","","pressure change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"distance","","distance change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"tilt","","tilt change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotation","","z-rotation change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"}],"output":null}],[11,"slider","","Slider position change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"i32"}],"output":null}],[11,"wheel","","Wheel delta event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"i32"}],"output":null}],[11,"button","","button event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"frame","","frame event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::client","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::client::zwp_tablet_v2","",null,null],[8,"Handler","","",null,null],[11,"name","","tablet device name",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"string"}],"output":null}],[11,"id","","tablet device USB vendor/product id",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"path","","path to the device",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"string"}],"output":null}],[11,"done","","tablet description events sequence complete",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"}],"output":null}],[11,"removed","","tablet removed event",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"}],"output":null}],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::client","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_ring_v2","",null,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","",86,null],[8,"Handler","","",null,null],[11,"source","","ring event source",87,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"source"}],"output":null}],[11,"angle","","angle changed",87,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"f64"}],"output":null}],[11,"stop","","interaction stopped",87,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"frame","","end of a ring event sequence",87,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"u32"}],"output":null}],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::client","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_strip_v2","",null,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","",88,null],[8,"Handler","","",null,null],[11,"source","","strip event source",89,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"source"}],"output":null}],[11,"position","","position changed",89,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"u32"}],"output":null}],[11,"stop","","interaction stopped",89,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"frame","","end of a strip event sequence",89,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"u32"}],"output":null}],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_group_v2","",null,null],[8,"Handler","","",null,null],[11,"buttons","","buttons announced",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"vec"}],"output":null}],[11,"ring","","ring announced",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"strip","","strip announced",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"modes","","mode-switch ability announced",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"u32"}],"output":null}],[11,"done","","tablet group description events sequence complete",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"mode_switch","","mode switch event",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_v2","",null,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",91,null],[13,"Pressed","","",91,null],[8,"Handler","","",null,null],[11,"group","","group announced",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"path","","path to the device",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"string"}],"output":null}],[11,"buttons","","buttons announced",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"}],"output":null}],[11,"done","","pad description event sequence complete",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"}],"output":null}],[11,"button","","physical button state",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"enter","","enter event",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":null}],[11,"leave","","enter event",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"removed","","pad removed event",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"}],"output":null}],[0,"server","wayland_protocols::unstable::tablet","",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::server::zwp_tablet_manager_v2","",null,null],[8,"Handler","","",null,null],[11,"get_tablet_seat","","get the tablet seat",93,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletmanagerv2"},{"name":"zwptabletseatv2"},{"name":"wlseat"}],"output":null}],[11,"destroy","","release the memory for the tablet manager object",93,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletmanagerv2"}],"output":null}],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::server::zwp_tablet_seat_v2","",null,null],[8,"Handler","","",null,null],[11,"destroy","","release the memory for the tablet seat object",94,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletseatv2"}],"output":null}],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::server::zwp_tablet_tool_v2","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","",95,null],[13,"Eraser","","",95,null],[13,"Brush","","",95,null],[13,"Pencil","","",95,null],[13,"Airbrush","","",95,null],[13,"Finger","","",95,null],[13,"Mouse","","",95,null],[13,"Lens","","",95,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","",96,null],[13,"Pressure","","",96,null],[13,"Distance","","",96,null],[13,"Rotation","","",96,null],[13,"Slider","","",96,null],[13,"Wheel","","",96,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",97,null],[13,"Pressed","","",97,null],[4,"Error","","",null,null],[13,"Role","","",98,null],[8,"Handler","","",null,null],[11,"set_cursor","","set the tablet tool's surface",99,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"destroy","","destroy the tool object",99,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptablettoolv2"}],"output":null}],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::server","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::server::zwp_tablet_v2","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the tablet object",100,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletv2"}],"output":null}],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::server","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::server::zwp_tablet_pad_ring_v2","",null,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","",101,null],[8,"Handler","","",null,null],[11,"set_feedback","","set compositor feedback",102,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadringv2"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"destroy","","destroy the ring object",102,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadringv2"}],"output":null}],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::server","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::server::zwp_tablet_pad_strip_v2","",null,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","",103,null],[8,"Handler","","",null,null],[11,"set_feedback","","set compositor feedback",104,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadstripv2"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"destroy","","destroy the strip object",104,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadstripv2"}],"output":null}],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::server::zwp_tablet_pad_group_v2","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the pad object",105,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadgroupv2"}],"output":null}],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::server::zwp_tablet_pad_v2","",null,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",106,null],[13,"Pressed","","",106,null],[8,"Handler","","",null,null],[11,"set_feedback","","set compositor feedback",107,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"destroy","","destroy the pad object",107,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadv2"}],"output":null}],[11,"ptr","wayland_protocols::unstable::tablet::client::zwp_tablet_manager_v2","",108,null],[11,"from_ptr_new","","",108,null],[11,"from_ptr_initialized","","",108,null],[11,"interface_ptr","","",108,null],[11,"interface_name","","",108,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",108,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",108,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",108,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",108,{"inputs":[{"name":"self"},{"name":"zwptabletmanagerv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",108,null],[11,"get_user_data","","",108,null],[11,"get_tablet_seat","","get the tablet seat",108,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"requestresult"}}],[11,"destroy","","release the memory for the tablet manager object",108,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"tablet_added","wayland_protocols::unstable::tablet::client::zwp_tablet_seat_v2","new device notification",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptabletv2"}],"output":null}],[11,"tool_added","","a new tool has been used with a tablet",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptablettoolv2"}],"output":null}],[11,"pad_added","","new pad notification",79,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletseatv2"},{"name":"zwptabletpadv2"}],"output":null}],[11,"ptr","","",109,null],[11,"from_ptr_new","","",109,null],[11,"from_ptr_initialized","","",109,null],[11,"interface_ptr","","",109,null],[11,"interface_name","","",109,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",109,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",109,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",109,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",109,{"inputs":[{"name":"self"},{"name":"zwptabletseatv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",109,null],[11,"get_user_data","","",109,null],[11,"destroy","","release the memory for the tablet seat object",109,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"type_","wayland_protocols::unstable::tablet::client::zwp_tablet_tool_v2","tool type",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"type"}],"output":null}],[11,"hardware_serial","","unique hardware serial number of the tool",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"capability","","tool capability notification",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"capability"}],"output":null}],[11,"done","","tool description events sequence complete",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"removed","","tool removed",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"proximity_in","","proximity in event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":null}],[11,"proximity_out","","proximity out event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"down","","tablet tool is making contact",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"up","","tablet tool is no longer making contact",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"}],"output":null}],[11,"motion","","motion event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"pressure","","pressure change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"distance","","distance change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"tilt","","tilt change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotation","","z-rotation change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"}],"output":null}],[11,"slider","","Slider position change event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"i32"}],"output":null}],[11,"wheel","","Wheel delta event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"f64"},{"name":"i32"}],"output":null}],[11,"button","","button event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"frame","","frame event",84,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptablettoolv2"},{"name":"u32"}],"output":null}],[11,"ptr","","",110,null],[11,"from_ptr_new","","",110,null],[11,"from_ptr_initialized","","",110,null],[11,"interface_ptr","","",110,null],[11,"interface_name","","",110,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",110,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",110,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",110,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",110,{"inputs":[{"name":"self"},{"name":"zwptablettoolv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",110,null],[11,"get_user_data","","",110,null],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",80,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",80,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",81,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",81,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",82,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",82,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",83,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",83,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_cursor","","set the tablet tool's surface",110,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the tool object",110,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"name","wayland_protocols::unstable::tablet::client::zwp_tablet_v2","tablet device name",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"string"}],"output":null}],[11,"id","","tablet device USB vendor/product id",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"path","","path to the device",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"},{"name":"string"}],"output":null}],[11,"done","","tablet description events sequence complete",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"}],"output":null}],[11,"removed","","tablet removed event",85,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletv2"}],"output":null}],[11,"ptr","","",111,null],[11,"from_ptr_new","","",111,null],[11,"from_ptr_initialized","","",111,null],[11,"interface_ptr","","",111,null],[11,"interface_name","","",111,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",111,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",111,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",111,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",111,{"inputs":[{"name":"self"},{"name":"zwptabletv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",111,null],[11,"get_user_data","","",111,null],[11,"destroy","","destroy the tablet object",111,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"source","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_ring_v2","ring event source",87,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"source"}],"output":null}],[11,"angle","","angle changed",87,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"f64"}],"output":null}],[11,"stop","","interaction stopped",87,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"frame","","end of a ring event sequence",87,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadringv2"},{"name":"u32"}],"output":null}],[11,"ptr","","",112,null],[11,"from_ptr_new","","",112,null],[11,"from_ptr_initialized","","",112,null],[11,"interface_ptr","","",112,null],[11,"interface_name","","",112,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",112,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",112,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",112,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",112,{"inputs":[{"name":"self"},{"name":"zwptabletpadringv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",112,null],[11,"get_user_data","","",112,null],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",86,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_feedback","","set compositor feedback",112,{"inputs":[{"name":"self"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the ring object",112,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"source","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_strip_v2","strip event source",89,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"source"}],"output":null}],[11,"position","","position changed",89,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"u32"}],"output":null}],[11,"stop","","interaction stopped",89,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"frame","","end of a strip event sequence",89,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadstripv2"},{"name":"u32"}],"output":null}],[11,"ptr","","",113,null],[11,"from_ptr_new","","",113,null],[11,"from_ptr_initialized","","",113,null],[11,"interface_ptr","","",113,null],[11,"interface_name","","",113,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",113,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",113,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",113,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",113,{"inputs":[{"name":"self"},{"name":"zwptabletpadstripv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",113,null],[11,"get_user_data","","",113,null],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",88,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_feedback","","set compositor feedback",113,{"inputs":[{"name":"self"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the strip object",113,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"buttons","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_group_v2","buttons announced",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"vec"}],"output":null}],[11,"ring","","ring announced",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"strip","","strip announced",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"modes","","mode-switch ability announced",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"u32"}],"output":null}],[11,"done","","tablet group description events sequence complete",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"mode_switch","","mode switch event",90,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadgroupv2"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",114,null],[11,"from_ptr_new","","",114,null],[11,"from_ptr_initialized","","",114,null],[11,"interface_ptr","","",114,null],[11,"interface_name","","",114,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",114,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",114,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",114,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",114,{"inputs":[{"name":"self"},{"name":"zwptabletpadgroupv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",114,null],[11,"get_user_data","","",114,null],[11,"destroy","","destroy the pad object",114,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"group","wayland_protocols::unstable::tablet::client::zwp_tablet_pad_v2","group announced",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"path","","path to the device",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"string"}],"output":null}],[11,"buttons","","buttons announced",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"}],"output":null}],[11,"done","","pad description event sequence complete",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"}],"output":null}],[11,"button","","physical button state",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":null}],[11,"enter","","enter event",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":null}],[11,"leave","","enter event",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"wlsurface"}],"output":null}],[11,"removed","","pad removed event",92,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptabletpadv2"}],"output":null}],[11,"ptr","","",115,null],[11,"from_ptr_new","","",115,null],[11,"from_ptr_initialized","","",115,null],[11,"interface_ptr","","",115,null],[11,"interface_name","","",115,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",115,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",115,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",115,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",115,{"inputs":[{"name":"self"},{"name":"zwptabletpadv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",115,null],[11,"get_user_data","","",115,null],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",91,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",91,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_feedback","","set compositor feedback",115,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","","destroy the pad object",115,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_tablet_seat","wayland_protocols::unstable::tablet::server::zwp_tablet_manager_v2","get the tablet seat",93,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletmanagerv2"},{"name":"zwptabletseatv2"},{"name":"wlseat"}],"output":null}],[11,"destroy","","release the memory for the tablet manager object",93,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletmanagerv2"}],"output":null}],[11,"ptr","","",116,null],[11,"from_ptr_new","","",116,null],[11,"from_ptr_initialized","","",116,null],[11,"interface_ptr","","",116,null],[11,"interface_name","","",116,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",116,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",116,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",116,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",116,{"inputs":[{"name":"self"},{"name":"zwptabletmanagerv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",116,null],[11,"get_user_data","","",116,null],[11,"destroy","wayland_protocols::unstable::tablet::server::zwp_tablet_seat_v2","release the memory for the tablet seat object",94,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletseatv2"}],"output":null}],[11,"ptr","","",117,null],[11,"from_ptr_new","","",117,null],[11,"from_ptr_initialized","","",117,null],[11,"interface_ptr","","",117,null],[11,"interface_name","","",117,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",117,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",117,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",117,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",117,{"inputs":[{"name":"self"},{"name":"zwptabletseatv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",117,null],[11,"get_user_data","","",117,null],[11,"tablet_added","","new device notification",117,{"inputs":[{"name":"self"},{"name":"zwptabletv2"}],"output":{"name":"eventresult"}}],[11,"tool_added","","a new tool has been used with a tablet",117,{"inputs":[{"name":"self"},{"name":"zwptablettoolv2"}],"output":{"name":"eventresult"}}],[11,"pad_added","","new pad notification",117,{"inputs":[{"name":"self"},{"name":"zwptabletpadv2"}],"output":{"name":"eventresult"}}],[11,"set_cursor","wayland_protocols::unstable::tablet::server::zwp_tablet_tool_v2","set the tablet tool's surface",99,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptablettoolv2"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"destroy","","destroy the tool object",99,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptablettoolv2"}],"output":null}],[11,"ptr","","",118,null],[11,"from_ptr_new","","",118,null],[11,"from_ptr_initialized","","",118,null],[11,"interface_ptr","","",118,null],[11,"interface_name","","",118,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",118,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",118,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",118,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",118,{"inputs":[{"name":"self"},{"name":"zwptablettoolv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",118,null],[11,"get_user_data","","",118,null],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"from_raw","","",95,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"from_raw","","",96,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",96,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",97,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",98,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",98,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"_type","","tool type",118,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"eventresult"}}],[11,"hardware_serial","","unique hardware serial number of the tool",118,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"hardware_id_wacom","","hardware id notification in Wacom's format",118,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"capability","","tool capability notification",118,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"eventresult"}}],[11,"done","","tool description events sequence complete",118,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"removed","","tool removed",118,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"proximity_in","","proximity in event",118,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"proximity_out","","proximity out event",118,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"down","","tablet tool is making contact",118,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"up","","tablet tool is no longer making contact",118,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"motion","","motion event",118,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"pressure","","pressure change event",118,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"distance","","distance change event",118,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"tilt","","tilt change event",118,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"rotation","","z-rotation change event",118,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"slider","","Slider position change event",118,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"wheel","","Wheel delta event",118,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"button","","button event",118,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":{"name":"eventresult"}}],[11,"frame","","frame event",118,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::tablet::server::zwp_tablet_v2","destroy the tablet object",100,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletv2"}],"output":null}],[11,"ptr","","",119,null],[11,"from_ptr_new","","",119,null],[11,"from_ptr_initialized","","",119,null],[11,"interface_ptr","","",119,null],[11,"interface_name","","",119,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",119,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",119,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",119,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",119,{"inputs":[{"name":"self"},{"name":"zwptabletv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",119,null],[11,"get_user_data","","",119,null],[11,"name","","tablet device name",119,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"id","","tablet device USB vendor/product id",119,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"path","","path to the device",119,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"done","","tablet description events sequence complete",119,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"removed","","tablet removed event",119,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"set_feedback","wayland_protocols::unstable::tablet::server::zwp_tablet_pad_ring_v2","set compositor feedback",102,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadringv2"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"destroy","","destroy the ring object",102,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadringv2"}],"output":null}],[11,"ptr","","",120,null],[11,"from_ptr_new","","",120,null],[11,"from_ptr_initialized","","",120,null],[11,"interface_ptr","","",120,null],[11,"interface_name","","",120,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",120,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",120,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",120,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",120,{"inputs":[{"name":"self"},{"name":"zwptabletpadringv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",120,null],[11,"get_user_data","","",120,null],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",101,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"source","","ring event source",120,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"eventresult"}}],[11,"angle","","angle changed",120,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"stop","","interaction stopped",120,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"frame","","end of a ring event sequence",120,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"set_feedback","wayland_protocols::unstable::tablet::server::zwp_tablet_pad_strip_v2","set compositor feedback",104,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadstripv2"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"destroy","","destroy the strip object",104,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadstripv2"}],"output":null}],[11,"ptr","","",121,null],[11,"from_ptr_new","","",121,null],[11,"from_ptr_initialized","","",121,null],[11,"interface_ptr","","",121,null],[11,"interface_name","","",121,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",121,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",121,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",121,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",121,{"inputs":[{"name":"self"},{"name":"zwptabletpadstripv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",121,null],[11,"get_user_data","","",121,null],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"bool"}}],[11,"from_raw","","",103,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",103,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"source","","strip event source",121,{"inputs":[{"name":"self"},{"name":"source"}],"output":{"name":"eventresult"}}],[11,"position","","position changed",121,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"stop","","interaction stopped",121,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"frame","","end of a strip event sequence",121,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::tablet::server::zwp_tablet_pad_group_v2","destroy the pad object",105,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadgroupv2"}],"output":null}],[11,"ptr","","",122,null],[11,"from_ptr_new","","",122,null],[11,"from_ptr_initialized","","",122,null],[11,"interface_ptr","","",122,null],[11,"interface_name","","",122,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",122,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",122,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",122,{"inputs":[{"name":"self"},{"name":"zwptabletpadgroupv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",122,null],[11,"get_user_data","","",122,null],[11,"buttons","","buttons announced",122,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"eventresult"}}],[11,"ring","","ring announced",122,{"inputs":[{"name":"self"},{"name":"zwptabletpadringv2"}],"output":{"name":"eventresult"}}],[11,"strip","","strip announced",122,{"inputs":[{"name":"self"},{"name":"zwptabletpadstripv2"}],"output":{"name":"eventresult"}}],[11,"modes","","mode-switch ability announced",122,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"done","","tablet group description events sequence complete",122,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"mode_switch","","mode switch event",122,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"set_feedback","wayland_protocols::unstable::tablet::server::zwp_tablet_pad_v2","set compositor feedback",107,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadv2"},{"name":"u32"},{"name":"string"},{"name":"u32"}],"output":null}],[11,"destroy","","destroy the pad object",107,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptabletpadv2"}],"output":null}],[11,"ptr","","",123,null],[11,"from_ptr_new","","",123,null],[11,"from_ptr_initialized","","",123,null],[11,"interface_ptr","","",123,null],[11,"interface_name","","",123,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",123,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",123,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",123,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",123,{"inputs":[{"name":"self"},{"name":"zwptabletpadv2"}],"output":{"name":"bool"}}],[11,"set_user_data","","",123,null],[11,"get_user_data","","",123,null],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",106,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",106,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"group","","group announced",123,{"inputs":[{"name":"self"},{"name":"zwptabletpadgroupv2"}],"output":{"name":"eventresult"}}],[11,"path","","path to the device",123,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"buttons","","buttons announced",123,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"done","","pad description event sequence complete",123,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"button","","physical button state",123,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":{"name":"eventresult"}}],[11,"enter","","enter event",123,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"zwptabletv2"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"leave","","enter event",123,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"removed","","pad removed event",123,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"text_input","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::text_input","",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::client","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::client::zwp_text_input_v1","",null,null],[4,"ContentHint","","content hint",null,null],[13,"None","","",124,null],[13,"Default","","",124,null],[13,"Password","","",124,null],[13,"AutoCompletion","","",124,null],[13,"AutoCorrection","","",124,null],[13,"AutoCapitalization","","",124,null],[13,"Lowercase","","",124,null],[13,"Uppercase","","",124,null],[13,"Titlecase","","",124,null],[13,"HiddenText","","",124,null],[13,"SensitiveData","","",124,null],[13,"Latin","","",124,null],[13,"Multiline","","",124,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","",125,null],[13,"Alpha","","",125,null],[13,"Digits","","",125,null],[13,"Number","","",125,null],[13,"Phone","","",125,null],[13,"Url","","",125,null],[13,"Email","","",125,null],[13,"Name","","",125,null],[13,"Password","","",125,null],[13,"Date","","",125,null],[13,"Time","","",125,null],[13,"Datetime","","",125,null],[13,"Terminal","","",125,null],[4,"PreeditStyle","","",null,null],[13,"Default","","",126,null],[13,"None","","",126,null],[13,"Active","","",126,null],[13,"Inactive","","",126,null],[13,"Highlight","","",126,null],[13,"Underline","","",126,null],[13,"Selection","","",126,null],[13,"Incorrect","","",126,null],[4,"TextDirection","","",null,null],[13,"Auto","","",127,null],[13,"Ltr","","",127,null],[13,"Rtl","","",127,null],[8,"Handler","","",null,null],[11,"enter","","enter event",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"wlsurface"}],"output":null}],[11,"leave","","leave event",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"}],"output":null}],[11,"modifiers_map","","modifiers map",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"vec"}],"output":null}],[11,"input_panel_state","","state of the input panel",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"}],"output":null}],[11,"preedit_string","","pre-edit",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":null}],[11,"preedit_styling","","pre-edit styling",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"preedit_cursor","","pre-edit cursor",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"}],"output":null}],[11,"commit_string","","commit",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"cursor_position","","set cursor to new position",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"delete_surrounding_text","","delete surrounding text",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"keysym","","keysym",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"language","","language",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"text_direction","","text direction",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::client","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::client::zwp_text_input_manager_v1","",null,null],[0,"server","wayland_protocols::unstable::text_input","",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::server","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::server::zwp_text_input_v1","",null,null],[4,"ContentHint","","content hint",null,null],[13,"None","","",129,null],[13,"Default","","",129,null],[13,"Password","","",129,null],[13,"AutoCompletion","","",129,null],[13,"AutoCorrection","","",129,null],[13,"AutoCapitalization","","",129,null],[13,"Lowercase","","",129,null],[13,"Uppercase","","",129,null],[13,"Titlecase","","",129,null],[13,"HiddenText","","",129,null],[13,"SensitiveData","","",129,null],[13,"Latin","","",129,null],[13,"Multiline","","",129,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","",130,null],[13,"Alpha","","",130,null],[13,"Digits","","",130,null],[13,"Number","","",130,null],[13,"Phone","","",130,null],[13,"Url","","",130,null],[13,"Email","","",130,null],[13,"Name","","",130,null],[13,"Password","","",130,null],[13,"Date","","",130,null],[13,"Time","","",130,null],[13,"Datetime","","",130,null],[13,"Terminal","","",130,null],[4,"PreeditStyle","","",null,null],[13,"Default","","",131,null],[13,"None","","",131,null],[13,"Active","","",131,null],[13,"Inactive","","",131,null],[13,"Highlight","","",131,null],[13,"Underline","","",131,null],[13,"Selection","","",131,null],[13,"Incorrect","","",131,null],[4,"TextDirection","","",null,null],[13,"Auto","","",132,null],[13,"Ltr","","",132,null],[13,"Rtl","","",132,null],[8,"Handler","","",null,null],[11,"activate","","request activation",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"wlseat"},{"name":"wlsurface"}],"output":null}],[11,"deactivate","","request deactivation",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"wlseat"}],"output":null}],[11,"show_input_panel","","show input panels",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"}],"output":null}],[11,"hide_input_panel","","hide input panels",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"}],"output":null}],[11,"reset","","reset",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"}],"output":null}],[11,"set_surrounding_text","","sets the surrounding text",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"string"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"set_content_type","","set content purpose and hint",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"set_cursor_rectangle","","",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_preferred_language","","sets preferred language",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"string"}],"output":null}],[11,"commit_state","","",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"u32"}],"output":null}],[11,"invoke_action","","",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::server","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::server::zwp_text_input_manager_v1","",null,null],[8,"Handler","","",null,null],[11,"create_text_input","","create text input",134,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputmanagerv1"},{"name":"zwptextinputv1"}],"output":null}],[11,"enter","wayland_protocols::unstable::text_input::client::zwp_text_input_v1","enter event",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"wlsurface"}],"output":null}],[11,"leave","","leave event",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"}],"output":null}],[11,"modifiers_map","","modifiers map",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"vec"}],"output":null}],[11,"input_panel_state","","state of the input panel",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"}],"output":null}],[11,"preedit_string","","pre-edit",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":null}],[11,"preedit_styling","","pre-edit styling",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"preedit_cursor","","pre-edit cursor",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"}],"output":null}],[11,"commit_string","","commit",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"cursor_position","","set cursor to new position",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"delete_surrounding_text","","delete surrounding text",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"keysym","","keysym",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"language","","language",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"text_direction","","text direction",128,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",135,null],[11,"from_ptr_new","","",135,null],[11,"from_ptr_initialized","","",135,null],[11,"interface_ptr","","",135,null],[11,"interface_name","","",135,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",135,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",135,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",135,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",135,{"inputs":[{"name":"self"},{"name":"zwptextinputv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",135,null],[11,"get_user_data","","",135,null],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"contenthint"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"contenthint"}],"output":{"name":"bool"}}],[11,"from_raw","","",124,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",124,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"contentpurpose"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"contentpurpose"}],"output":{"name":"bool"}}],[11,"from_raw","","",125,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",125,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"preeditstyle"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"preeditstyle"}],"output":{"name":"bool"}}],[11,"from_raw","","",126,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",126,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"from_raw","","",127,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",127,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"activate","","request activation",135,null],[11,"deactivate","","request deactivation",135,null],[11,"show_input_panel","","show input panels",135,null],[11,"hide_input_panel","","hide input panels",135,null],[11,"reset","","reset",135,null],[11,"set_surrounding_text","","sets the surrounding text",135,null],[11,"set_content_type","","set content purpose and hint",135,null],[11,"set_cursor_rectangle","","",135,null],[11,"set_preferred_language","","sets preferred language",135,null],[11,"commit_state","","",135,null],[11,"invoke_action","","",135,null],[11,"ptr","wayland_protocols::unstable::text_input::client::zwp_text_input_manager_v1","",136,null],[11,"from_ptr_new","","",136,null],[11,"from_ptr_initialized","","",136,null],[11,"interface_ptr","","",136,null],[11,"interface_name","","",136,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",136,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",136,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",136,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",136,{"inputs":[{"name":"self"},{"name":"zwptextinputmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",136,null],[11,"get_user_data","","",136,null],[11,"create_text_input","","create text input",136,{"inputs":[{"name":"self"}],"output":{"name":"zwptextinputv1"}}],[11,"activate","wayland_protocols::unstable::text_input::server::zwp_text_input_v1","request activation",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"wlseat"},{"name":"wlsurface"}],"output":null}],[11,"deactivate","","request deactivation",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"wlseat"}],"output":null}],[11,"show_input_panel","","show input panels",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"}],"output":null}],[11,"hide_input_panel","","hide input panels",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"}],"output":null}],[11,"reset","","reset",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"}],"output":null}],[11,"set_surrounding_text","","sets the surrounding text",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"string"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"set_content_type","","set content purpose and hint",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"set_cursor_rectangle","","",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_preferred_language","","sets preferred language",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"string"}],"output":null}],[11,"commit_state","","",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"u32"}],"output":null}],[11,"invoke_action","","",133,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputv1"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",137,null],[11,"from_ptr_new","","",137,null],[11,"from_ptr_initialized","","",137,null],[11,"interface_ptr","","",137,null],[11,"interface_name","","",137,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",137,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",137,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",137,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",137,{"inputs":[{"name":"self"},{"name":"zwptextinputv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",137,null],[11,"get_user_data","","",137,null],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"contenthint"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"contenthint"}],"output":{"name":"bool"}}],[11,"from_raw","","",129,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",129,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"contentpurpose"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"contentpurpose"}],"output":{"name":"bool"}}],[11,"from_raw","","",130,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",130,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"preeditstyle"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"preeditstyle"}],"output":{"name":"bool"}}],[11,"from_raw","","",131,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",131,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"from_raw","","",132,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",132,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"enter","","enter event",137,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"leave","","leave event",137,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"modifiers_map","","modifiers map",137,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"eventresult"}}],[11,"input_panel_state","","state of the input panel",137,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"preedit_string","","pre-edit",137,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"preedit_styling","","pre-edit styling",137,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"preedit_cursor","","pre-edit cursor",137,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"commit_string","","commit",137,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"cursor_position","","set cursor to new position",137,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"delete_surrounding_text","","delete surrounding text",137,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"keysym","","keysym",137,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"language","","language",137,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"text_direction","","text direction",137,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"create_text_input","wayland_protocols::unstable::text_input::server::zwp_text_input_manager_v1","create text input",134,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zwptextinputmanagerv1"},{"name":"zwptextinputv1"}],"output":null}],[11,"ptr","","",138,null],[11,"from_ptr_new","","",138,null],[11,"from_ptr_initialized","","",138,null],[11,"interface_ptr","","",138,null],[11,"interface_name","","",138,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",138,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",138,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",138,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",138,{"inputs":[{"name":"self"},{"name":"zwptextinputmanagerv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",138,null],[11,"get_user_data","","",138,null],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",null,null],[0,"client","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::client","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::client::zxdg_exporter_v1","",null,null],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::client","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::client::zxdg_importer_v1","",null,null],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::client","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::client::zxdg_exported_v1","",null,null],[8,"Handler","","",null,null],[11,"handle","","the exported surface handle",139,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgexportedv1"},{"name":"string"}],"output":null}],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::client","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::client::zxdg_imported_v1","",null,null],[8,"Handler","","",null,null],[11,"destroyed","","the imported surface handle has been destroyed",140,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgimportedv1"}],"output":null}],[0,"server","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::server::zxdg_exporter_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the xdg_exporter object",141,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgexporterv1"}],"output":null}],[11,"export","","export a surface",141,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgexporterv1"},{"name":"zxdgexportedv1"},{"name":"wlsurface"}],"output":null}],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::server::zxdg_importer_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the xdg_importer object",142,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgimporterv1"}],"output":null}],[11,"import","","import a surface",142,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgimporterv1"},{"name":"zxdgimportedv1"},{"name":"string"}],"output":null}],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::server","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::server::zxdg_exported_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","unexport the exported surface",143,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgexportedv1"}],"output":null}],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::server","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::server::zxdg_imported_v1","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the xdg_imported object",144,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgimportedv1"}],"output":null}],[11,"set_parent_of","","set as the parent of some surface",144,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgimportedv1"},{"name":"wlsurface"}],"output":null}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::client::zxdg_exporter_v1","",145,null],[11,"from_ptr_new","","",145,null],[11,"from_ptr_initialized","","",145,null],[11,"interface_ptr","","",145,null],[11,"interface_name","","",145,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",145,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",145,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",145,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",145,{"inputs":[{"name":"self"},{"name":"zxdgexporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",145,null],[11,"get_user_data","","",145,null],[11,"destroy","","destroy the xdg_exporter object",145,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"export","","export a surface",145,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_foreign::client::zxdg_importer_v1","",146,null],[11,"from_ptr_new","","",146,null],[11,"from_ptr_initialized","","",146,null],[11,"interface_ptr","","",146,null],[11,"interface_name","","",146,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",146,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",146,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",146,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",146,{"inputs":[{"name":"self"},{"name":"zxdgimporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",146,null],[11,"get_user_data","","",146,null],[11,"destroy","","destroy the xdg_importer object",146,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"import","","import a surface",146,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"handle","wayland_protocols::unstable::xdg_foreign::client::zxdg_exported_v1","the exported surface handle",139,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgexportedv1"},{"name":"string"}],"output":null}],[11,"ptr","","",147,null],[11,"from_ptr_new","","",147,null],[11,"from_ptr_initialized","","",147,null],[11,"interface_ptr","","",147,null],[11,"interface_name","","",147,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",147,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",147,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",147,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",147,{"inputs":[{"name":"self"},{"name":"zxdgexportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",147,null],[11,"get_user_data","","",147,null],[11,"destroy","","unexport the exported surface",147,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"destroyed","wayland_protocols::unstable::xdg_foreign::client::zxdg_imported_v1","the imported surface handle has been destroyed",140,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgimportedv1"}],"output":null}],[11,"ptr","","",148,null],[11,"from_ptr_new","","",148,null],[11,"from_ptr_initialized","","",148,null],[11,"interface_ptr","","",148,null],[11,"interface_name","","",148,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",148,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",148,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",148,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",148,{"inputs":[{"name":"self"},{"name":"zxdgimportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",148,null],[11,"get_user_data","","",148,null],[11,"destroy","","destroy the xdg_imported object",148,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_parent_of","","set as the parent of some surface",148,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"destroy","wayland_protocols::unstable::xdg_foreign::server::zxdg_exporter_v1","destroy the xdg_exporter object",141,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgexporterv1"}],"output":null}],[11,"export","","export a surface",141,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgexporterv1"},{"name":"zxdgexportedv1"},{"name":"wlsurface"}],"output":null}],[11,"ptr","","",149,null],[11,"from_ptr_new","","",149,null],[11,"from_ptr_initialized","","",149,null],[11,"interface_ptr","","",149,null],[11,"interface_name","","",149,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",149,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",149,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",149,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",149,{"inputs":[{"name":"self"},{"name":"zxdgexporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",149,null],[11,"get_user_data","","",149,null],[11,"destroy","wayland_protocols::unstable::xdg_foreign::server::zxdg_importer_v1","destroy the xdg_importer object",142,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgimporterv1"}],"output":null}],[11,"import","","import a surface",142,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgimporterv1"},{"name":"zxdgimportedv1"},{"name":"string"}],"output":null}],[11,"ptr","","",150,null],[11,"from_ptr_new","","",150,null],[11,"from_ptr_initialized","","",150,null],[11,"interface_ptr","","",150,null],[11,"interface_name","","",150,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",150,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",150,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",150,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",150,{"inputs":[{"name":"self"},{"name":"zxdgimporterv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",150,null],[11,"get_user_data","","",150,null],[11,"destroy","wayland_protocols::unstable::xdg_foreign::server::zxdg_exported_v1","unexport the exported surface",143,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgexportedv1"}],"output":null}],[11,"ptr","","",151,null],[11,"from_ptr_new","","",151,null],[11,"from_ptr_initialized","","",151,null],[11,"interface_ptr","","",151,null],[11,"interface_name","","",151,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",151,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",151,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",151,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",151,{"inputs":[{"name":"self"},{"name":"zxdgexportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",151,null],[11,"get_user_data","","",151,null],[11,"handle","","the exported surface handle",151,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::xdg_foreign::server::zxdg_imported_v1","destroy the xdg_imported object",144,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgimportedv1"}],"output":null}],[11,"set_parent_of","","set as the parent of some surface",144,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgimportedv1"},{"name":"wlsurface"}],"output":null}],[11,"ptr","","",152,null],[11,"from_ptr_new","","",152,null],[11,"from_ptr_initialized","","",152,null],[11,"interface_ptr","","",152,null],[11,"interface_name","","",152,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",152,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",152,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",152,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",152,{"inputs":[{"name":"self"},{"name":"zxdgimportedv1"}],"output":{"name":"bool"}}],[11,"set_user_data","","",152,null],[11,"get_user_data","","",152,null],[11,"destroyed","","the imported surface handle has been destroyed",152,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"xdg_shell","wayland_protocols::unstable","",null,null],[0,"client","wayland_protocols::unstable::xdg_shell","",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::client","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::client::zxdg_shell_v6","",null,null],[4,"Error","","",null,null],[13,"Role","","",153,null],[13,"DefunctSurfaces","","",153,null],[13,"NotTheTopmostPopup","","",153,null],[13,"InvalidPopupParent","","",153,null],[13,"InvalidSurfaceState","","",153,null],[13,"InvalidPositioner","","",153,null],[8,"Handler","","",null,null],[11,"ping","","check if the client is alive",154,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgshellv6"},{"name":"u32"}],"output":null}],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::client","child surface positioner",null,null],[3,"ZxdgPositionerV6","wayland_protocols::unstable::xdg_shell::client::zxdg_positioner_v6","",null,null],[3,"Anchor","","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","",155,null],[17,"AnchorNone","","",null,null],[17,"AnchorTop","","",null,null],[17,"AnchorBottom","","",null,null],[17,"AnchorLeft","","",null,null],[17,"AnchorRight","","",null,null],[17,"GravityNone","","",null,null],[17,"GravityTop","","",null,null],[17,"GravityBottom","","",null,null],[17,"GravityLeft","","",null,null],[17,"GravityRight","","",null,null],[17,"ConstraintAdjustmentNone","","don't move the child surface when constrained",null,null],[17,"ConstraintAdjustmentSlideX","","move along the x axis until unconstrained",null,null],[17,"ConstraintAdjustmentSlideY","","move along the y axis until unconstrained",null,null],[17,"ConstraintAdjustmentFlipX","","invert the anchor and gravity on the x axis",null,null],[17,"ConstraintAdjustmentFlipY","","invert the anchor and gravity on the y axis",null,null],[17,"ConstraintAdjustmentResizeX","","horizontally resize the surface",null,null],[17,"ConstraintAdjustmentResizeY","","vertically resize the surface",null,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::client","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::client::zxdg_surface_v6","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",156,null],[13,"AlreadyConstructed","","",156,null],[13,"UnconfiguredBuffer","","",156,null],[8,"Handler","","",null,null],[11,"configure","","suggest a surface change",157,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgsurfacev6"},{"name":"u32"}],"output":null}],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::client","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::client::zxdg_toplevel_v6","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",158,null],[13,"Top","","",158,null],[13,"Bottom","","",158,null],[13,"Left","","",158,null],[13,"TopLeft","","",158,null],[13,"BottomLeft","","",158,null],[13,"Right","","",158,null],[13,"TopRight","","",158,null],[13,"BottomRight","","",158,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",159,null],[13,"Fullscreen","","the surface is fullscreen",159,null],[13,"Resizing","","the surface is being resized",159,null],[13,"Activated","","the surface is now activated",159,null],[8,"Handler","","",null,null],[11,"configure","","suggest a surface change",160,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"},{"name":"vec"}],"output":null}],[11,"close","","surface wants to be closed",160,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"}],"output":null}],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::client","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::client::zxdg_popup_v6","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","",161,null],[8,"Handler","","",null,null],[11,"configure","","configure the popup surface",162,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgpopupv6"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"popup_done","","popup interaction is done",162,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgpopupv6"}],"output":null}],[0,"server","wayland_protocols::unstable::xdg_shell","",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::server","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::server::zxdg_shell_v6","",null,null],[4,"Error","","",null,null],[13,"Role","","",163,null],[13,"DefunctSurfaces","","",163,null],[13,"NotTheTopmostPopup","","",163,null],[13,"InvalidPopupParent","","",163,null],[13,"InvalidSurfaceState","","",163,null],[13,"InvalidPositioner","","",163,null],[8,"Handler","","",null,null],[11,"destroy","","destroy xdg_shell",164,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgshellv6"}],"output":null}],[11,"create_positioner","","create a positioner object",164,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgshellv6"},{"name":"zxdgpositionerv6"}],"output":null}],[11,"get_xdg_surface","","create a shell surface from a surface",164,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgshellv6"},{"name":"zxdgsurfacev6"},{"name":"wlsurface"}],"output":null}],[11,"pong","","respond to a ping event",164,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgshellv6"},{"name":"u32"}],"output":null}],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::server","child surface positioner",null,null],[3,"ZxdgPositionerV6","wayland_protocols::unstable::xdg_shell::server::zxdg_positioner_v6","",null,null],[3,"Anchor","","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","",165,null],[17,"AnchorNone","","",null,null],[17,"AnchorTop","","",null,null],[17,"AnchorBottom","","",null,null],[17,"AnchorLeft","","",null,null],[17,"AnchorRight","","",null,null],[17,"GravityNone","","",null,null],[17,"GravityTop","","",null,null],[17,"GravityBottom","","",null,null],[17,"GravityLeft","","",null,null],[17,"GravityRight","","",null,null],[17,"ConstraintAdjustmentNone","","don't move the child surface when constrained",null,null],[17,"ConstraintAdjustmentSlideX","","move along the x axis until unconstrained",null,null],[17,"ConstraintAdjustmentSlideY","","move along the y axis until unconstrained",null,null],[17,"ConstraintAdjustmentFlipX","","invert the anchor and gravity on the x axis",null,null],[17,"ConstraintAdjustmentFlipY","","invert the anchor and gravity on the y axis",null,null],[17,"ConstraintAdjustmentResizeX","","horizontally resize the surface",null,null],[17,"ConstraintAdjustmentResizeY","","vertically resize the surface",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the xdg_positioner object",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"}],"output":null}],[11,"set_size","","set the size of the to-be positioned rectangle",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_anchor","","set anchor rectangle anchor edges",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"anchor"}],"output":null}],[11,"set_gravity","","set child surface gravity",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"gravity"}],"output":null}],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"u32"}],"output":null}],[11,"set_offset","","set surface position offset",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"i32"},{"name":"i32"}],"output":null}],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::server","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::server::zxdg_surface_v6","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",167,null],[13,"AlreadyConstructed","","",167,null],[13,"UnconfiguredBuffer","","",167,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the xdg_surface",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"}],"output":null}],[11,"get_toplevel","","assign the xdg_toplevel surface role",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"get_popup","","assign the xdg_popup surface role",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"},{"name":"zxdgpopupv6"},{"name":"zxdgsurfacev6"},{"name":"zxdgpositionerv6"}],"output":null}],[11,"set_window_geometry","","set the new window geometry",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ack_configure","","ack a configure event",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"},{"name":"u32"}],"output":null}],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::server","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::server::zxdg_toplevel_v6","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",169,null],[13,"Top","","",169,null],[13,"Bottom","","",169,null],[13,"Left","","",169,null],[13,"TopLeft","","",169,null],[13,"BottomLeft","","",169,null],[13,"Right","","",169,null],[13,"TopRight","","",169,null],[13,"BottomRight","","",169,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",170,null],[13,"Fullscreen","","the surface is fullscreen",170,null],[13,"Resizing","","the surface is being resized",170,null],[13,"Activated","","the surface is now activated",170,null],[8,"Handler","","",null,null],[11,"destroy","","destroy the xdg_toplevel",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"set_parent","","set the parent of this surface",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"option"}],"output":null}],[11,"set_title","","set surface title",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"string"}],"output":null}],[11,"set_app_id","","set application ID",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"string"}],"output":null}],[11,"show_window_menu","","show the window menu",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"wlseat"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"move_","","start an interactive move",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"wlseat"},{"name":"u32"}],"output":null}],[11,"resize","","start an interactive resize",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"wlseat"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"set_max_size","","set the maximum size",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_min_size","","set the minimum size",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_maximized","","maximize the window",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"unset_maximized","","unmaximize the window",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"set_fullscreen","","set the window as fullscreen on a monitor",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"option"}],"output":null}],[11,"unset_fullscreen","","",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"set_minimized","","set the window as minimized",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::server","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::server::zxdg_popup_v6","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","",172,null],[8,"Handler","","",null,null],[11,"destroy","","remove xdg_popup interface",173,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpopupv6"}],"output":null}],[11,"grab","","make the popup take an explicit grab",173,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpopupv6"},{"name":"wlseat"},{"name":"u32"}],"output":null}],[11,"ping","wayland_protocols::unstable::xdg_shell::client::zxdg_shell_v6","check if the client is alive",154,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgshellv6"},{"name":"u32"}],"output":null}],[11,"ptr","","",174,null],[11,"from_ptr_new","","",174,null],[11,"from_ptr_initialized","","",174,null],[11,"interface_ptr","","",174,null],[11,"interface_name","","",174,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",174,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",174,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",174,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",174,{"inputs":[{"name":"self"},{"name":"zxdgshellv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",174,null],[11,"get_user_data","","",174,null],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",153,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",153,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy xdg_shell",174,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"create_positioner","","create a positioner object",174,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_xdg_surface","","create a shell surface from a surface",174,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"pong","","respond to a ping event",174,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::unstable::xdg_shell::client::zxdg_positioner_v6","",175,null],[11,"from_ptr_new","","",175,null],[11,"from_ptr_initialized","","",175,null],[11,"interface_ptr","","",175,null],[11,"interface_name","","",175,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",175,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",175,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",175,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",175,{"inputs":[{"name":"self"},{"name":"zxdgpositionerv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",175,null],[11,"get_user_data","","",175,null],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",155,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",155,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"partial_cmp","","",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"option"}}],[11,"lt","","",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"le","","",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"gt","","",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ge","","",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"cmp","","",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"ordering"}}],[11,"hash","","",176,null],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",176,{"inputs":[],"output":{"name":"anchor"}}],[11,"all","","Returns the set containing all flags.",176,{"inputs":[],"output":{"name":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",176,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",176,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",176,{"inputs":[{"name":"u32"}],"output":{"name":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",176,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",176,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",176,{"inputs":[{"name":"self"},{"name":"anchor"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",176,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",176,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"extend","","",176,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",176,{"inputs":[{"name":"t"}],"output":{"name":"anchor"}}],[11,"from_raw","","",176,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",176,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"clone","","",177,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"partial_cmp","","",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"option"}}],[11,"lt","","",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"le","","",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"gt","","",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ge","","",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"cmp","","",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"ordering"}}],[11,"hash","","",177,null],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",177,{"inputs":[],"output":{"name":"gravity"}}],[11,"all","","Returns the set containing all flags.",177,{"inputs":[],"output":{"name":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",177,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",177,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",177,{"inputs":[{"name":"u32"}],"output":{"name":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",177,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",177,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",177,{"inputs":[{"name":"self"},{"name":"gravity"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",177,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",177,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"extend","","",177,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",177,{"inputs":[{"name":"t"}],"output":{"name":"gravity"}}],[11,"from_raw","","",177,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",177,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"option"}}],[11,"lt","","",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",178,null],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",178,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",178,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",178,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",178,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",178,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",178,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",178,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",178,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",178,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",178,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",178,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",178,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",178,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the xdg_positioner object",175,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_size","","set the size of the to-be positioned rectangle",175,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",175,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_anchor","","set anchor rectangle anchor edges",175,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"requestresult"}}],[11,"set_gravity","","set child surface gravity",175,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"requestresult"}}],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",175,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_offset","","set surface position offset",175,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"configure","wayland_protocols::unstable::xdg_shell::client::zxdg_surface_v6","suggest a surface change",157,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgsurfacev6"},{"name":"u32"}],"output":null}],[11,"ptr","","",179,null],[11,"from_ptr_new","","",179,null],[11,"from_ptr_initialized","","",179,null],[11,"interface_ptr","","",179,null],[11,"interface_name","","",179,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",179,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",179,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",179,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",179,{"inputs":[{"name":"self"},{"name":"zxdgsurfacev6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",179,null],[11,"get_user_data","","",179,null],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",156,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",156,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the xdg_surface",179,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_toplevel","","assign the xdg_toplevel surface role",179,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_popup","","assign the xdg_popup surface role",179,{"inputs":[{"name":"self"},{"name":"zxdgsurfacev6"},{"name":"zxdgpositionerv6"}],"output":{"name":"requestresult"}}],[11,"set_window_geometry","","set the new window geometry",179,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"ack_configure","","ack a configure event",179,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"configure","wayland_protocols::unstable::xdg_shell::client::zxdg_toplevel_v6","suggest a surface change",160,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"},{"name":"vec"}],"output":null}],[11,"close","","surface wants to be closed",160,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"ptr","","",180,null],[11,"from_ptr_new","","",180,null],[11,"from_ptr_initialized","","",180,null],[11,"interface_ptr","","",180,null],[11,"interface_name","","",180,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",180,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",180,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",180,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",180,{"inputs":[{"name":"self"},{"name":"zxdgtoplevelv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",180,null],[11,"get_user_data","","",180,null],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",158,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",158,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",159,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",159,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","destroy the xdg_toplevel",180,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_parent","","set the parent of this surface",180,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"set_title","","set surface title",180,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"set_app_id","","set application ID",180,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"requestresult"}}],[11,"show_window_menu","","show the window menu",180,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"_move","","start an interactive move",180,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"resize","","start an interactive resize",180,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"set_max_size","","set the maximum size",180,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_min_size","","set the minimum size",180,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"set_maximized","","maximize the window",180,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"unset_maximized","","unmaximize the window",180,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_fullscreen","","set the window as fullscreen on a monitor",180,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"requestresult"}}],[11,"unset_fullscreen","","",180,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_minimized","","set the window as minimized",180,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"configure","wayland_protocols::unstable::xdg_shell::client::zxdg_popup_v6","configure the popup surface",162,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgpopupv6"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"popup_done","","popup interaction is done",162,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"zxdgpopupv6"}],"output":null}],[11,"ptr","","",181,null],[11,"from_ptr_new","","",181,null],[11,"from_ptr_initialized","","",181,null],[11,"interface_ptr","","",181,null],[11,"interface_name","","",181,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",181,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",181,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",181,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",181,{"inputs":[{"name":"self"},{"name":"zxdgpopupv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",181,null],[11,"get_user_data","","",181,null],[11,"clone","","",161,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",161,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",161,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",161,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","remove xdg_popup interface",181,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"grab","","make the popup take an explicit grab",181,{"inputs":[{"name":"self"},{"name":"wlseat"},{"name":"u32"}],"output":{"name":"requestresult"}}],[11,"destroy","wayland_protocols::unstable::xdg_shell::server::zxdg_shell_v6","destroy xdg_shell",164,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgshellv6"}],"output":null}],[11,"create_positioner","","create a positioner object",164,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgshellv6"},{"name":"zxdgpositionerv6"}],"output":null}],[11,"get_xdg_surface","","create a shell surface from a surface",164,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgshellv6"},{"name":"zxdgsurfacev6"},{"name":"wlsurface"}],"output":null}],[11,"pong","","respond to a ping event",164,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgshellv6"},{"name":"u32"}],"output":null}],[11,"ptr","","",182,null],[11,"from_ptr_new","","",182,null],[11,"from_ptr_initialized","","",182,null],[11,"interface_ptr","","",182,null],[11,"interface_name","","",182,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",182,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",182,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",182,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",182,{"inputs":[{"name":"self"},{"name":"zxdgshellv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",182,null],[11,"get_user_data","","",182,null],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",163,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",163,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ping","","check if the client is alive",182,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::xdg_shell::server::zxdg_positioner_v6","destroy the xdg_positioner object",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"}],"output":null}],[11,"set_size","","set the size of the to-be positioned rectangle",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_anchor","","set anchor rectangle anchor edges",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"anchor"}],"output":null}],[11,"set_gravity","","set child surface gravity",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"gravity"}],"output":null}],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"u32"}],"output":null}],[11,"set_offset","","set surface position offset",166,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpositionerv6"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","",183,null],[11,"from_ptr_new","","",183,null],[11,"from_ptr_initialized","","",183,null],[11,"interface_ptr","","",183,null],[11,"interface_name","","",183,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",183,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",183,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",183,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",183,{"inputs":[{"name":"self"},{"name":"zxdgpositionerv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",183,null],[11,"get_user_data","","",183,null],[11,"clone","","",165,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",165,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",165,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",165,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"clone","","",184,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"partial_cmp","","",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"option"}}],[11,"lt","","",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"le","","",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"gt","","",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"ge","","",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"cmp","","",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"ordering"}}],[11,"hash","","",184,null],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",184,{"inputs":[],"output":{"name":"anchor"}}],[11,"all","","Returns the set containing all flags.",184,{"inputs":[],"output":{"name":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",184,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",184,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",184,{"inputs":[{"name":"u32"}],"output":{"name":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",184,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",184,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",184,{"inputs":[{"name":"self"},{"name":"anchor"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":{"name":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",184,{"inputs":[{"name":"self"},{"name":"anchor"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",184,{"inputs":[{"name":"self"}],"output":{"name":"anchor"}}],[11,"extend","","",184,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",184,{"inputs":[{"name":"t"}],"output":{"name":"anchor"}}],[11,"from_raw","","",184,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",184,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"clone","","",185,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"partial_cmp","","",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"option"}}],[11,"lt","","",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"le","","",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"gt","","",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ge","","",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"cmp","","",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"ordering"}}],[11,"hash","","",185,null],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",185,{"inputs":[],"output":{"name":"gravity"}}],[11,"all","","Returns the set containing all flags.",185,{"inputs":[],"output":{"name":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",185,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",185,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",185,{"inputs":[{"name":"u32"}],"output":{"name":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",185,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",185,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",185,{"inputs":[{"name":"self"},{"name":"gravity"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",185,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",185,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"extend","","",185,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",185,{"inputs":[{"name":"t"}],"output":{"name":"gravity"}}],[11,"from_raw","","",185,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",185,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"clone","","",186,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"partial_cmp","","",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"option"}}],[11,"lt","","",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"le","","",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"gt","","",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"ge","","",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"cmp","","",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"ordering"}}],[11,"hash","","",186,null],[11,"fmt","","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",186,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",186,{"inputs":[],"output":{"name":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",186,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",186,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",186,{"inputs":[{"name":"u32"}],"output":{"name":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",186,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",186,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":{"name":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",186,{"inputs":[{"name":"self"},{"name":"constraintadjustment"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",186,{"inputs":[{"name":"self"}],"output":{"name":"constraintadjustment"}}],[11,"extend","","",186,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",186,{"inputs":[{"name":"t"}],"output":{"name":"constraintadjustment"}}],[11,"from_raw","","",186,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",186,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","wayland_protocols::unstable::xdg_shell::server::zxdg_surface_v6","destroy the xdg_surface",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"}],"output":null}],[11,"get_toplevel","","assign the xdg_toplevel surface role",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"get_popup","","assign the xdg_popup surface role",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"},{"name":"zxdgpopupv6"},{"name":"zxdgsurfacev6"},{"name":"zxdgpositionerv6"}],"output":null}],[11,"set_window_geometry","","set the new window geometry",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ack_configure","","ack a configure event",168,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgsurfacev6"},{"name":"u32"}],"output":null}],[11,"ptr","","",187,null],[11,"from_ptr_new","","",187,null],[11,"from_ptr_initialized","","",187,null],[11,"interface_ptr","","",187,null],[11,"interface_name","","",187,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",187,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",187,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",187,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",187,{"inputs":[{"name":"self"},{"name":"zxdgsurfacev6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",187,null],[11,"get_user_data","","",187,null],[11,"clone","","",167,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",167,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",167,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",167,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"configure","","suggest a surface change",187,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::xdg_shell::server::zxdg_toplevel_v6","destroy the xdg_toplevel",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"set_parent","","set the parent of this surface",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"option"}],"output":null}],[11,"set_title","","set surface title",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"string"}],"output":null}],[11,"set_app_id","","set application ID",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"string"}],"output":null}],[11,"show_window_menu","","show the window menu",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"wlseat"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"move_","","start an interactive move",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"wlseat"},{"name":"u32"}],"output":null}],[11,"resize","","start an interactive resize",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"wlseat"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"set_max_size","","set the maximum size",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_min_size","","set the minimum size",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_maximized","","maximize the window",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"unset_maximized","","unmaximize the window",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"set_fullscreen","","set the window as fullscreen on a monitor",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"},{"name":"option"}],"output":null}],[11,"unset_fullscreen","","",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"set_minimized","","set the window as minimized",171,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgtoplevelv6"}],"output":null}],[11,"ptr","","",188,null],[11,"from_ptr_new","","",188,null],[11,"from_ptr_initialized","","",188,null],[11,"interface_ptr","","",188,null],[11,"interface_name","","",188,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",188,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",188,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",188,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",188,{"inputs":[{"name":"self"},{"name":"zxdgtoplevelv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",188,null],[11,"get_user_data","","",188,null],[11,"clone","","",169,{"inputs":[{"name":"self"}],"output":{"name":"resizeedge"}}],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",169,{"inputs":[{"name":"self"},{"name":"resizeedge"}],"output":{"name":"bool"}}],[11,"from_raw","","",169,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",169,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",170,{"inputs":[{"name":"self"}],"output":{"name":"state"}}],[11,"fmt","","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",170,{"inputs":[{"name":"self"},{"name":"state"}],"output":{"name":"bool"}}],[11,"from_raw","","",170,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",170,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"configure","","suggest a surface change",188,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"vec"}],"output":{"name":"eventresult"}}],[11,"close","","surface wants to be closed",188,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_protocols::unstable::xdg_shell::server::zxdg_popup_v6","remove xdg_popup interface",173,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpopupv6"}],"output":null}],[11,"grab","","make the popup take an explicit grab",173,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"zxdgpopupv6"},{"name":"wlseat"},{"name":"u32"}],"output":null}],[11,"ptr","","",189,null],[11,"from_ptr_new","","",189,null],[11,"from_ptr_initialized","","",189,null],[11,"interface_ptr","","",189,null],[11,"interface_name","","",189,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",189,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",189,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",189,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",189,{"inputs":[{"name":"self"},{"name":"zxdgpopupv6"}],"output":{"name":"bool"}}],[11,"set_user_data","","",189,null],[11,"get_user_data","","",189,null],[11,"clone","","",172,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",172,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",172,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",172,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",172,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"configure","","configure the popup surface",189,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"popup_done","","popup interaction is done",189,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[0,"presentation_time","wayland_protocols","Presentation time protocol",null,null],[0,"client","wayland_protocols::presentation_time","",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","",190,null],[13,"InvalidFlag","","",190,null],[8,"Handler","","",null,null],[11,"clock_id","","clock ID for timestamps",191,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentation"},{"name":"u32"}],"output":null}],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",null,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","",192,null],[13,"HwClock","","",192,null],[13,"HwCompletion","","",192,null],[13,"ZeroCopy","","",192,null],[8,"Handler","","",null,null],[11,"sync_output","","presentation synchronized to this output",193,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"},{"name":"wloutput"}],"output":null}],[11,"presented","","the content update was displayed",193,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"discarded","","the content update was not displayed",193,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"}],"output":null}],[0,"server","wayland_protocols::presentation_time","",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","",194,null],[13,"InvalidFlag","","",194,null],[8,"Handler","","",null,null],[11,"destroy","","unbind from the presentation interface",195,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wppresentation"}],"output":null}],[11,"feedback","","request presentation feedback information",195,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wppresentation"},{"name":"wlsurface"},{"name":"wppresentationfeedback"}],"output":null}],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::server::wp_presentation_feedback","",null,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","",196,null],[13,"HwClock","","",196,null],[13,"HwCompletion","","",196,null],[13,"ZeroCopy","","",196,null],[0,"viewporter","wayland_protocols","Viewporter protocol",null,null],[0,"client","wayland_protocols::viewporter","",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","",197,null],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","",198,null],[13,"BadSize","","",198,null],[13,"OutOfBuffer","","",198,null],[13,"NoSurface","","",198,null],[0,"server","wayland_protocols::viewporter","",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","",199,null],[8,"Handler","","",null,null],[11,"destroy","","unbind from the cropping and scaling interface",200,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewporter"}],"output":null}],[11,"get_viewport","","extend surface interface for crop and scale",200,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewporter"},{"name":"wpviewport"},{"name":"wlsurface"}],"output":null}],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","",201,null],[13,"BadSize","","",201,null],[13,"OutOfBuffer","","",201,null],[13,"NoSurface","","",201,null],[8,"Handler","","",null,null],[11,"destroy","","remove scaling and cropping from the surface",202,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewport"}],"output":null}],[11,"set_source","","set the source rectangle for cropping",202,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewport"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_destination","","set the surface size for scaling",202,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewport"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"clock_id","wayland_protocols::presentation_time::client::wp_presentation","clock ID for timestamps",191,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentation"},{"name":"u32"}],"output":null}],[11,"ptr","","",203,null],[11,"from_ptr_new","","",203,null],[11,"from_ptr_initialized","","",203,null],[11,"interface_ptr","","",203,null],[11,"interface_name","","",203,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",203,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",203,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",203,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",203,{"inputs":[{"name":"self"},{"name":"wppresentation"}],"output":{"name":"bool"}}],[11,"set_user_data","","",203,null],[11,"get_user_data","","",203,null],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",190,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",190,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",190,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",190,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","unbind from the presentation interface",203,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"feedback","","request presentation feedback information",203,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"sync_output","wayland_protocols::presentation_time::client::wp_presentation_feedback","presentation synchronized to this output",193,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"},{"name":"wloutput"}],"output":null}],[11,"presented","","the content update was displayed",193,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"discarded","","the content update was not displayed",193,{"inputs":[{"name":"self"},{"name":"eventqueuehandle"},{"name":"wppresentationfeedback"}],"output":null}],[11,"ptr","","",204,null],[11,"from_ptr_new","","",204,null],[11,"from_ptr_initialized","","",204,null],[11,"interface_ptr","","",204,null],[11,"interface_name","","",204,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",204,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",204,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",204,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",204,{"inputs":[{"name":"self"},{"name":"wppresentationfeedback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",204,null],[11,"get_user_data","","",204,null],[11,"clone","","",192,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",192,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",192,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"from_raw","","",192,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",192,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","wayland_protocols::presentation_time::server::wp_presentation","unbind from the presentation interface",195,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wppresentation"}],"output":null}],[11,"feedback","","request presentation feedback information",195,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wppresentation"},{"name":"wlsurface"},{"name":"wppresentationfeedback"}],"output":null}],[11,"ptr","","",205,null],[11,"from_ptr_new","","",205,null],[11,"from_ptr_initialized","","",205,null],[11,"interface_ptr","","",205,null],[11,"interface_name","","",205,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",205,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",205,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",205,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",205,{"inputs":[{"name":"self"},{"name":"wppresentation"}],"output":{"name":"bool"}}],[11,"set_user_data","","",205,null],[11,"get_user_data","","",205,null],[11,"clone","","",194,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",194,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",194,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",194,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",194,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clock_id","","clock ID for timestamps",205,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::presentation_time::server::wp_presentation_feedback","",206,null],[11,"from_ptr_new","","",206,null],[11,"from_ptr_initialized","","",206,null],[11,"interface_ptr","","",206,null],[11,"interface_name","","",206,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",206,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",206,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",206,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",206,{"inputs":[{"name":"self"},{"name":"wppresentationfeedback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",206,null],[11,"get_user_data","","",206,null],[11,"clone","","",196,{"inputs":[{"name":"self"}],"output":{"name":"kind"}}],[11,"fmt","","",196,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",196,{"inputs":[{"name":"self"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"from_raw","","",196,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",196,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"sync_output","","presentation synchronized to this output",206,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"eventresult"}}],[11,"presented","","the content update was displayed",206,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"discarded","","the content update was not displayed",206,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"ptr","wayland_protocols::viewporter::client::wp_viewporter","",207,null],[11,"from_ptr_new","","",207,null],[11,"from_ptr_initialized","","",207,null],[11,"interface_ptr","","",207,null],[11,"interface_name","","",207,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",207,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",207,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",207,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",207,{"inputs":[{"name":"self"},{"name":"wpviewporter"}],"output":{"name":"bool"}}],[11,"set_user_data","","",207,null],[11,"get_user_data","","",207,null],[11,"clone","","",197,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",197,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",197,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",197,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","unbind from the cropping and scaling interface",207,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"get_viewport","","extend surface interface for crop and scale",207,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"requestresult"}}],[11,"ptr","wayland_protocols::viewporter::client::wp_viewport","",208,null],[11,"from_ptr_new","","",208,null],[11,"from_ptr_initialized","","",208,null],[11,"interface_ptr","","",208,null],[11,"interface_name","","",208,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",208,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",208,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"status","","",208,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",208,{"inputs":[{"name":"self"},{"name":"wpviewport"}],"output":{"name":"bool"}}],[11,"set_user_data","","",208,null],[11,"get_user_data","","",208,null],[11,"clone","","",198,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",198,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",198,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",198,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",198,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","","remove scaling and cropping from the surface",208,{"inputs":[{"name":"self"}],"output":{"name":"requestresult"}}],[11,"set_source","","set the source rectangle for cropping",208,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"requestresult"}}],[11,"set_destination","","set the surface size for scaling",208,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"requestresult"}}],[11,"destroy","wayland_protocols::viewporter::server::wp_viewporter","unbind from the cropping and scaling interface",200,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewporter"}],"output":null}],[11,"get_viewport","","extend surface interface for crop and scale",200,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewporter"},{"name":"wpviewport"},{"name":"wlsurface"}],"output":null}],[11,"ptr","","",209,null],[11,"from_ptr_new","","",209,null],[11,"from_ptr_initialized","","",209,null],[11,"interface_ptr","","",209,null],[11,"interface_name","","",209,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",209,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",209,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",209,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",209,{"inputs":[{"name":"self"},{"name":"wpviewporter"}],"output":{"name":"bool"}}],[11,"set_user_data","","",209,null],[11,"get_user_data","","",209,null],[11,"clone","","",199,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",199,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",199,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",199,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",199,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","wayland_protocols::viewporter::server::wp_viewport","remove scaling and cropping from the surface",202,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewport"}],"output":null}],[11,"set_source","","set the source rectangle for cropping",202,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewport"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_destination","","set the surface size for scaling",202,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wpviewport"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","",210,null],[11,"from_ptr_new","","",210,null],[11,"from_ptr_initialized","","",210,null],[11,"interface_ptr","","",210,null],[11,"interface_name","","",210,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",210,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",210,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",210,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",210,{"inputs":[{"name":"self"},{"name":"wpviewport"}],"output":{"name":"bool"}}],[11,"set_user_data","","",210,null],[11,"get_user_data","","",210,null],[11,"clone","","",201,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",201,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",201,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",201,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",201,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}]],"paths":[[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[8,"Handler"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[8,"Handler"],[8,"Handler"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpIdleInhibitorV1"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpIdleInhibitorV1"],[8,"Handler"],[8,"Handler"],[4,"Position"],[8,"Handler"],[8,"Handler"],[4,"Position"],[8,"Handler"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[3,"ZwpInputPanelV1"],[3,"ZwpInputPanelSurfaceV1"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[3,"ZwpInputPanelV1"],[3,"ZwpInputPanelSurfaceV1"],[8,"Handler"],[4,"Error"],[4,"Flags"],[8,"Handler"],[8,"Handler"],[4,"Error"],[4,"Flags"],[8,"Handler"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Lifetime"],[8,"Handler"],[8,"Handler"],[4,"Error"],[4,"Lifetime"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[8,"Handler"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Source"],[8,"Handler"],[4,"Source"],[8,"Handler"],[8,"Handler"],[4,"ButtonState"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Source"],[8,"Handler"],[4,"Source"],[8,"Handler"],[8,"Handler"],[4,"ButtonState"],[8,"Handler"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[8,"Handler"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[8,"Handler"],[8,"Handler"],[3,"ZwpTextInputV1"],[3,"ZwpTextInputManagerV1"],[3,"ZwpTextInputV1"],[3,"ZwpTextInputManagerV1"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[8,"Handler"],[3,"ZxdgExporterV1"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[3,"ZxdgExporterV1"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Error"],[8,"Handler"],[4,"Error"],[4,"Error"],[8,"Handler"],[4,"ResizeEdge"],[4,"State"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"ResizeEdge"],[4,"State"],[8,"Handler"],[4,"Error"],[8,"Handler"],[3,"ZxdgShellV6"],[3,"ZxdgPositionerV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"ZxdgShellV6"],[3,"ZxdgPositionerV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[4,"Error"],[8,"Handler"],[4,"Kind"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Kind"],[4,"Error"],[4,"Error"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[3,"WpViewporter"],[3,"WpViewport"],[3,"WpViewporter"],[3,"WpViewport"]]};
searchIndex["wayland_scanner"] = {"doc":"Wayland scanner crate","items":[[4,"Side","wayland_scanner","Side to generate",null,null],[13,"Client","","wayland client applications",0,null],[13,"Server","","wayland compositors",0,null],[5,"generate_interfaces","","Generate the interfaces for a protocol",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":null}],[5,"generate_code","","Generate the code for a protocol",null,{"inputs":[{"name":"p1"},{"name":"p2"},{"name":"side"}],"output":null}],[5,"generate_interfaces_streams","","Generate the interfaces for a protocol from/to IO streams",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":null}],[5,"generate_code_streams","","Generate the code for a protocol from/to IO streams",null,{"inputs":[{"name":"p1"},{"name":"p2"},{"name":"side"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"side"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"side"}],"output":{"name":"bool"}}]],"paths":[[4,"Side"]]};
searchIndex["wayland_server"] = {"doc":"Server-side Wayland connector","items":[[3,"Client","wayland_server","A wayland client connected to your server",null,null],[3,"Display","","A wayland socket",null,null],[3,"EventLoop","","",null,null],[3,"EventLoopHandle","","Handle to an event loop",null,null],[3,"Global","","A handle to a global object",null,null],[3,"StateGuard","","Guard to access internal state of an event loop",null,null],[4,"RegisterStatus","","Status of a registration attempt of a resource.",null,null],[13,"Registered","","The resource was properly registered to this event loop & handler.",0,null],[13,"Unmanaged","","The resource was not registered because it is not managed by `wayland-server`.",0,null],[13,"Dead","","The resource was not registered because it is already destroyed.",0,null],[4,"EventResult","","Possible outcome of the call of a event on a resource",null,null],[13,"Sent","","Message has been buffered and will be sent to client",1,null],[13,"Destroyed","","This resource is already destroyed, request has been ignored",1,null],[4,"Liveness","","Represents the state of liveness of a wayland object",null,null],[13,"Alive","","This object is alive and events can be sent to it",2,null],[13,"Dead","","This object is dead, sending it events will do nothing and return and error.",2,null],[13,"Unmanaged","","This object is not managed by `wayland-server`, you can send it events but this might crash the program if it was actually dead.",2,null],[5,"create_display","","Create a new display",null,null],[5,"resource_is_registered","","Checks if a resource is registered with a given handler on an event loop",null,{"inputs":[{"name":"r"},{"name":"usize"}],"output":{"name":"bool"}}],[0,"protocol_interfaces","","Interfaces for the core protocol",null,null],[7,"wl_display_requests","wayland_server::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[0,"protocol","wayland_server","The wayland core protocol",null,null],[0,"wl_callback","wayland_server::protocol","callback object",null,null],[3,"WlCallback","wayland_server::protocol::wl_callback","",null,null],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",null,null],[8,"Handler","","",null,null],[11,"create_surface","","create new surface",3,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlcompositor"},{"name":"wlsurface"}],"output":null}],[11,"create_region","","create new region",3,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlcompositor"},{"name":"wlregion"}],"output":null}],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",null,null],[8,"Handler","","",null,null],[11,"create_buffer","","create a buffer from the pool",4,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshmpool"},{"name":"wlbuffer"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"format"}],"output":null}],[11,"destroy","","destroy the pool",4,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshmpool"}],"output":null}],[11,"resize","","change the size of the pool mapping",4,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshmpool"},{"name":"i32"}],"output":null}],[0,"wl_shm","wayland_server::protocol","shared memory support",null,null],[3,"WlShm","wayland_server::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","",5,null],[13,"InvalidStride","","",5,null],[13,"InvalidFd","","",5,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","",6,null],[13,"Xrgb8888","","",6,null],[13,"C8","","",6,null],[13,"Rgb332","","",6,null],[13,"Bgr233","","",6,null],[13,"Xrgb4444","","",6,null],[13,"Xbgr4444","","",6,null],[13,"Rgbx4444","","",6,null],[13,"Bgrx4444","","",6,null],[13,"Argb4444","","",6,null],[13,"Abgr4444","","",6,null],[13,"Rgba4444","","",6,null],[13,"Bgra4444","","",6,null],[13,"Xrgb1555","","",6,null],[13,"Xbgr1555","","",6,null],[13,"Rgbx5551","","",6,null],[13,"Bgrx5551","","",6,null],[13,"Argb1555","","",6,null],[13,"Abgr1555","","",6,null],[13,"Rgba5551","","",6,null],[13,"Bgra5551","","",6,null],[13,"Rgb565","","",6,null],[13,"Bgr565","","",6,null],[13,"Rgb888","","",6,null],[13,"Bgr888","","",6,null],[13,"Xbgr8888","","",6,null],[13,"Rgbx8888","","",6,null],[13,"Bgrx8888","","",6,null],[13,"Abgr8888","","",6,null],[13,"Rgba8888","","",6,null],[13,"Bgra8888","","",6,null],[13,"Xrgb2101010","","",6,null],[13,"Xbgr2101010","","",6,null],[13,"Rgbx1010102","","",6,null],[13,"Bgrx1010102","","",6,null],[13,"Argb2101010","","",6,null],[13,"Abgr2101010","","",6,null],[13,"Rgba1010102","","",6,null],[13,"Bgra1010102","","",6,null],[13,"Yuyv","","",6,null],[13,"Yvyu","","",6,null],[13,"Uyvy","","",6,null],[13,"Vyuy","","",6,null],[13,"Ayuv","","",6,null],[13,"Nv12","","",6,null],[13,"Nv21","","",6,null],[13,"Nv16","","",6,null],[13,"Nv61","","",6,null],[13,"Yuv410","","",6,null],[13,"Yvu410","","",6,null],[13,"Yuv411","","",6,null],[13,"Yvu411","","",6,null],[13,"Yuv420","","",6,null],[13,"Yvu420","","",6,null],[13,"Yuv422","","",6,null],[13,"Yvu422","","",6,null],[13,"Yuv444","","",6,null],[13,"Yvu444","","",6,null],[8,"Handler","","",null,null],[11,"create_pool","","create a shm pool",7,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshm"},{"name":"wlshmpool"},{"name":"rawfd"},{"name":"i32"}],"output":null}],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy a buffer",8,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlbuffer"}],"output":null}],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","",9,null],[13,"InvalidActionMask","","",9,null],[13,"InvalidAction","","",9,null],[13,"InvalidOffer","","",9,null],[8,"Handler","","",null,null],[11,"accept","","accept one of the offered mime types",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"receive","","request that the data is transferred",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"},{"name":"string"},{"name":"rawfd"}],"output":null}],[11,"destroy","","destroy data offer",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"}],"output":null}],[11,"finish","","the offer will no longer be used",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"}],"output":null}],[11,"set_actions","","set the available/preferred drag-and-drop actions",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","",11,null],[13,"InvalidSource","","",11,null],[8,"Handler","","",null,null],[11,"offer","","add an offered mime type",12,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatasource"},{"name":"string"}],"output":null}],[11,"destroy","","destroy the data source",12,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatasource"}],"output":null}],[11,"set_actions","","set the available drag-and-drop actions",12,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatasource"},{"name":"u32"}],"output":null}],[0,"wl_data_device","wayland_server::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","",13,null],[8,"Handler","","",null,null],[11,"start_drag","","start drag-and-drop operation",14,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevice"},{"name":"option"},{"name":"wlsurface"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"set_selection","","copy data to the selection",14,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevice"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"release","","destroy data device",14,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevice"}],"output":null}],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",null,null],[3,"WlDataDeviceManager","wayland_server::protocol::wl_data_device_manager","",null,null],[3,"DndAction","","drag and drop actions",null,null],[17,"None","","",null,null],[17,"Copy","","",null,null],[17,"Move","","",null,null],[17,"Ask","","",null,null],[8,"Handler","","",null,null],[11,"create_data_source","","create a new data source",15,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevicemanager"},{"name":"wldatasource"}],"output":null}],[11,"get_data_device","","create a new data device",15,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevicemanager"},{"name":"wldatadevice"},{"name":"wlseat"}],"output":null}],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_server::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","",16,null],[8,"Handler","","",null,null],[11,"get_shell_surface","","create a shell surface from a surface",17,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshell"},{"name":"wlshellsurface"},{"name":"wlsurface"}],"output":null}],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",null,null],[3,"WlShellSurface","wayland_server::protocol::wl_shell_surface","",null,null],[3,"Resize","","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","",18,null],[13,"Scale","","",18,null],[13,"Driver","","",18,null],[13,"Fill","","",18,null],[17,"None","","",null,null],[17,"Top","","",null,null],[17,"Bottom","","",null,null],[17,"Left","","",null,null],[17,"TopLeft","","",null,null],[17,"BottomLeft","","",null,null],[17,"Right","","",null,null],[17,"TopRight","","",null,null],[17,"BottomRight","","",null,null],[17,"Inactive","","",null,null],[8,"Handler","","",null,null],[11,"pong","","respond to a ping event",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"move_","","start an interactive move",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"}],"output":null}],[11,"resize","","start an interactive resize",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"resize"}],"output":null}],[11,"set_toplevel","","make the surface a toplevel surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"}],"output":null}],[11,"set_transient","","make the surface a transient surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"transient"}],"output":null}],[11,"set_fullscreen","","make the surface a fullscreen surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"fullscreenmethod"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"set_popup","","make the surface a popup surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"transient"}],"output":null}],[11,"set_maximized","","make the surface a maximized surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"option"}],"output":null}],[11,"set_title","","set surface title",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"string"}],"output":null}],[11,"set_class","","set surface class",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"string"}],"output":null}],[0,"wl_surface","wayland_server::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_server::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","",20,null],[13,"InvalidTransform","","",20,null],[8,"Handler","","",null,null],[11,"destroy","","delete surface",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"}],"output":null}],[11,"attach","","set the surface contents",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"damage","","mark part of the surface damaged",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"frame","","request a frame throttling hint",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"wlcallback"}],"output":null}],[11,"set_opaque_region","","set opaque region",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"option"}],"output":null}],[11,"set_input_region","","set input region",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"option"}],"output":null}],[11,"commit","","commit pending surface state",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"}],"output":null}],[11,"set_buffer_transform","","sets the buffer transformation",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"transform"}],"output":null}],[11,"set_buffer_scale","","sets the buffer scaling factor",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"i32"}],"output":null}],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[0,"wl_seat","wayland_server::protocol","group of input devices",null,null],[3,"WlSeat","wayland_server::protocol::wl_seat","",null,null],[3,"Capability","","seat capability bitmask",null,null],[17,"Pointer","","",null,null],[17,"Keyboard","","",null,null],[17,"Touch","","",null,null],[8,"Handler","","",null,null],[11,"get_pointer","","return pointer object",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlseat"},{"name":"wlpointer"}],"output":null}],[11,"get_keyboard","","return keyboard object",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlseat"},{"name":"wlkeyboard"}],"output":null}],[11,"get_touch","","return touch object",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlseat"},{"name":"wltouch"}],"output":null}],[11,"release","","release the seat object",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlseat"}],"output":null}],[0,"wl_pointer","wayland_server::protocol","pointer input device",null,null],[3,"WlPointer","wayland_server::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","",23,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","",24,null],[13,"Pressed","","",24,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","",25,null],[13,"HorizontalScroll","","",25,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","",26,null],[13,"Finger","","",26,null],[13,"Continuous","","",26,null],[8,"Handler","","",null,null],[11,"set_cursor","","set the pointer surface",27,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlpointer"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"release","","release the pointer object",27,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlpointer"}],"output":null}],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","",28,null],[13,"XkbV1","","",28,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","",29,null],[13,"Pressed","","",29,null],[8,"Handler","","",null,null],[11,"release","","release the keyboard object",30,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlkeyboard"}],"output":null}],[0,"wl_touch","wayland_server::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_server::protocol::wl_touch","",null,null],[8,"Handler","","",null,null],[11,"release","","release the touch object",31,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wltouch"}],"output":null}],[0,"wl_output","wayland_server::protocol","compositor output region",null,null],[3,"WlOutput","wayland_server::protocol::wl_output","",null,null],[3,"Mode","","mode information",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","",32,null],[13,"None","","",32,null],[13,"HorizontalRgb","","",32,null],[13,"HorizontalBgr","","",32,null],[13,"VerticalRgb","","",32,null],[13,"VerticalBgr","","",32,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","",33,null],[13,"_90","","",33,null],[13,"_180","","",33,null],[13,"_270","","",33,null],[13,"Flipped","","",33,null],[13,"Flipped90","","",33,null],[13,"Flipped180","","",33,null],[13,"Flipped270","","",33,null],[17,"Current","","",null,null],[17,"Preferred","","",null,null],[8,"Handler","","",null,null],[11,"release","","release the output object",34,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wloutput"}],"output":null}],[0,"wl_region","wayland_server::protocol","region interface",null,null],[3,"WlRegion","wayland_server::protocol::wl_region","",null,null],[8,"Handler","","",null,null],[11,"destroy","","destroy region",35,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlregion"}],"output":null}],[11,"add","","add rectangle to region",35,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlregion"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"subtract","","subtract rectangle from region",35,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlregion"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","",36,null],[8,"Handler","","",null,null],[11,"destroy","","unbind from the subcompositor interface",37,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubcompositor"}],"output":null}],[11,"get_subsurface","","give a surface the role sub-surface",37,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubcompositor"},{"name":"wlsubsurface"},{"name":"wlsurface"},{"name":"wlsurface"}],"output":null}],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","",38,null],[8,"Handler","","",null,null],[11,"destroy","","remove sub-surface interface",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"}],"output":null}],[11,"set_position","","reposition the sub-surface",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"place_above","","restack the sub-surface",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"},{"name":"wlsurface"}],"output":null}],[11,"place_below","","restack the sub-surface",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"},{"name":"wlsurface"}],"output":null}],[11,"set_sync","","set sub-surface to synchronized mode",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"}],"output":null}],[11,"set_desync","","set sub-surface to desynchronized mode",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"}],"output":null}],[11,"ptr","wayland_server","Get a pointer to the C wl_client object",40,null],[11,"post_no_memory","","Post a \"no memory\" message to the client",40,{"inputs":[{"name":"self"}],"output":null}],[11,"from_ptr","","Create a client object from a pointer",40,null],[11,"add_socket","","Add a listening socket to this display",41,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"ioresult"}}],[11,"add_socket_auto","","Add an automatically named listening socket to this display",41,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"add_socket_from","","Add existing listening socket to this display",41,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"ioresult"}}],[11,"add_socket_fd","","Add existing listening socket to this display from a raw file descriptor",41,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"ioresult"}}],[11,"flush_clients","","Flush events to the clients",41,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",41,{"inputs":[{"name":"self"}],"output":null}],[11,"destroy","","Destroy the associated global object.",42,{"inputs":[{"name":"self"}],"output":null}],[11,"register","","Register a resource to a handler of this event loop.",43,{"inputs":[{"name":"self"},{"name":"r"},{"name":"usize"}],"output":{"name":"registerstatus"}}],[11,"register_with_destructor","","Register a resource to a handler of this event loop with a destructor",43,{"inputs":[{"name":"self"},{"name":"r"},{"name":"usize"}],"output":{"name":"registerstatus"}}],[11,"add_handler","","Insert a new handler to this EventLoop",43,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"usize"}}],[11,"add_handler_with_init","","Insert a new handler with init",43,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"usize"}}],[11,"stop_loop","","Stop looping",43,{"inputs":[{"name":"self"}],"output":null}],[11,"remove_handler","","Remove a handler previously inserted in this event loop and returns it.",43,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"get_handler","","Get a reference to a handler",44,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"get_mut_handler","","Get a mutable reference to a handler",44,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"h"}}],[11,"new","","Create a new EventLoop",45,{"inputs":[],"output":{"name":"eventloop"}}],[11,"dispatch","","Dispatch pending requests to their respective handlers",45,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"ioresult"}}],[11,"run","","Runs the event loop",45,{"inputs":[{"name":"self"}],"output":{"name":"ioresult"}}],[11,"register_global","","Register a global object to the display.",45,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"i32"}],"output":{"name":"global"}}],[11,"state","","Get an handle to the internal state",45,{"inputs":[{"name":"self"}],"output":{"name":"stateguard"}}],[11,"add_fd_event_source","","Add a File Descriptor event source to this event loop",45,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"},{"name":"fdinterest"}],"output":{"name":"ioresult"}}],[11,"add_timer_event_source","","Add a timer event source to this event loop",45,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"ioresult"}}],[11,"add_signal_event_source","","Add a signal event source to this event loop",45,{"inputs":[{"name":"self"},{"name":"signal"},{"name":"usize"}],"output":{"name":"ioresult"}}],[11,"deref","","",45,{"inputs":[{"name":"self"}],"output":{"name":"eventloophandle"}}],[11,"deref_mut","","",45,{"inputs":[{"name":"self"}],"output":{"name":"eventloophandle"}}],[11,"drop","","",45,{"inputs":[{"name":"self"}],"output":null}],[0,"sources","","Secondary event sources",null,null],[3,"FdEventSource","wayland_server::sources","A handle to a registered FD event source",null,null],[3,"FdInterest","","Flags to register interest on a file descriptor",null,null],[3,"SignalEventSource","","A handle to a registered signal event source",null,null],[3,"TimerEventSource","","A handle to a registered timer event source",null,null],[17,"READ","","Interest to be notified when the file descriptor is readable",null,null],[17,"WRITE","","Interest to be notified when the file descriptor is writable",null,null],[8,"FdEventSourceHandler","","Trait for handlers for FD events",null,null],[10,"ready","","The FD is ready to be read/written",46,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"rawfd"},{"name":"fdinterest"}],"output":null}],[10,"error","","An error occured with this FD",46,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"rawfd"},{"name":"ioerror"}],"output":null}],[8,"SignalEventSourceHandler","","Trait for handlers of signal event sources",null,null],[10,"signal","","A signal has been received",47,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"signal"}],"output":null}],[8,"TimerEventSourceHandler","","Trait for handlers for timer event sources",null,null],[10,"timeout","","The countdown has reached zero",48,{"inputs":[{"name":"self"},{"name":"eventloophandle"}],"output":null}],[11,"ptr","wayland_server::protocol::wl_callback","",49,null],[11,"from_ptr_new","","",49,null],[11,"from_ptr_initialized","","",49,null],[11,"interface_ptr","","",49,null],[11,"interface_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",49,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",49,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",49,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",49,{"inputs":[{"name":"self"},{"name":"wlcallback"}],"output":{"name":"bool"}}],[11,"set_user_data","","",49,null],[11,"get_user_data","","",49,null],[11,"done","","done event",49,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"create_surface","wayland_server::protocol::wl_compositor","create new surface",3,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlcompositor"},{"name":"wlsurface"}],"output":null}],[11,"create_region","","create new region",3,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlcompositor"},{"name":"wlregion"}],"output":null}],[11,"ptr","","",50,null],[11,"from_ptr_new","","",50,null],[11,"from_ptr_initialized","","",50,null],[11,"interface_ptr","","",50,null],[11,"interface_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",50,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",50,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",50,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",50,{"inputs":[{"name":"self"},{"name":"wlcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",50,null],[11,"get_user_data","","",50,null],[11,"create_buffer","wayland_server::protocol::wl_shm_pool","create a buffer from the pool",4,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshmpool"},{"name":"wlbuffer"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"format"}],"output":null}],[11,"destroy","","destroy the pool",4,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshmpool"}],"output":null}],[11,"resize","","change the size of the pool mapping",4,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshmpool"},{"name":"i32"}],"output":null}],[11,"ptr","","",51,null],[11,"from_ptr_new","","",51,null],[11,"from_ptr_initialized","","",51,null],[11,"interface_ptr","","",51,null],[11,"interface_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",51,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",51,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",51,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",51,{"inputs":[{"name":"self"},{"name":"wlshmpool"}],"output":{"name":"bool"}}],[11,"set_user_data","","",51,null],[11,"get_user_data","","",51,null],[11,"create_pool","wayland_server::protocol::wl_shm","create a shm pool",7,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshm"},{"name":"wlshmpool"},{"name":"rawfd"},{"name":"i32"}],"output":null}],[11,"ptr","","",52,null],[11,"from_ptr_new","","",52,null],[11,"from_ptr_initialized","","",52,null],[11,"interface_ptr","","",52,null],[11,"interface_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",52,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",52,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",52,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",52,{"inputs":[{"name":"self"},{"name":"wlshm"}],"output":{"name":"bool"}}],[11,"set_user_data","","",52,null],[11,"get_user_data","","",52,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",5,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"from_raw","","",6,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"format","","pixel format description",52,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_server::protocol::wl_buffer","destroy a buffer",8,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlbuffer"}],"output":null}],[11,"ptr","","",53,null],[11,"from_ptr_new","","",53,null],[11,"from_ptr_initialized","","",53,null],[11,"interface_ptr","","",53,null],[11,"interface_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",53,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",53,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",53,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",53,{"inputs":[{"name":"self"},{"name":"wlbuffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",53,null],[11,"get_user_data","","",53,null],[11,"release","","compositor releases buffer",53,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"accept","wayland_server::protocol::wl_data_offer","accept one of the offered mime types",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"receive","","request that the data is transferred",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"},{"name":"string"},{"name":"rawfd"}],"output":null}],[11,"destroy","","destroy data offer",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"}],"output":null}],[11,"finish","","the offer will no longer be used",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"}],"output":null}],[11,"set_actions","","set the available/preferred drag-and-drop actions",10,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldataoffer"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"ptr","","",54,null],[11,"from_ptr_new","","",54,null],[11,"from_ptr_initialized","","",54,null],[11,"interface_ptr","","",54,null],[11,"interface_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",54,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",54,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",54,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",54,{"inputs":[{"name":"self"},{"name":"wldataoffer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",54,null],[11,"get_user_data","","",54,null],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",9,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"offer","","advertise offered mime type",54,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"source_actions","","notify the source-side available actions",54,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"action","","notify the selected action",54,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"offer","wayland_server::protocol::wl_data_source","add an offered mime type",12,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatasource"},{"name":"string"}],"output":null}],[11,"destroy","","destroy the data source",12,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatasource"}],"output":null}],[11,"set_actions","","set the available drag-and-drop actions",12,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatasource"},{"name":"u32"}],"output":null}],[11,"ptr","","",55,null],[11,"from_ptr_new","","",55,null],[11,"from_ptr_initialized","","",55,null],[11,"interface_ptr","","",55,null],[11,"interface_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",55,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",55,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",55,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",55,{"inputs":[{"name":"self"},{"name":"wldatasource"}],"output":{"name":"bool"}}],[11,"set_user_data","","",55,null],[11,"get_user_data","","",55,null],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",11,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",11,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"target","","a target accepts an offered mime type",55,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"eventresult"}}],[11,"send","","send the data",55,{"inputs":[{"name":"self"},{"name":"string"},{"name":"rawfd"}],"output":{"name":"eventresult"}}],[11,"cancelled","","selection was cancelled",55,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",55,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"dnd_finished","","the drag-and-drop operation concluded",55,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"action","","notify the selected action",55,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"start_drag","wayland_server::protocol::wl_data_device","start drag-and-drop operation",14,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevice"},{"name":"option"},{"name":"wlsurface"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"set_selection","","copy data to the selection",14,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevice"},{"name":"option"},{"name":"u32"}],"output":null}],[11,"release","","destroy data device",14,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevice"}],"output":null}],[11,"ptr","","",56,null],[11,"from_ptr_new","","",56,null],[11,"from_ptr_initialized","","",56,null],[11,"interface_ptr","","",56,null],[11,"interface_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",56,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",56,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",56,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",56,{"inputs":[{"name":"self"},{"name":"wldatadevice"}],"output":{"name":"bool"}}],[11,"set_user_data","","",56,null],[11,"get_user_data","","",56,null],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",13,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"data_offer","","introduce a new wl_data_offer",56,{"inputs":[{"name":"self"},{"name":"wldataoffer"}],"output":{"name":"eventresult"}}],[11,"enter","","initiate drag-and-drop session",56,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"},{"name":"option"}],"output":{"name":"eventresult"}}],[11,"leave","","end drag-and-drop session",56,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"motion","","drag-and-drop session motion",56,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"drop","","end drag-and-drop session successfully",56,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"selection","","advertise new selection",56,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"eventresult"}}],[11,"create_data_source","wayland_server::protocol::wl_data_device_manager","create a new data source",15,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevicemanager"},{"name":"wldatasource"}],"output":null}],[11,"get_data_device","","create a new data device",15,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wldatadevicemanager"},{"name":"wldatadevice"},{"name":"wlseat"}],"output":null}],[11,"ptr","","",57,null],[11,"from_ptr_new","","",57,null],[11,"from_ptr_initialized","","",57,null],[11,"interface_ptr","","",57,null],[11,"interface_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",57,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",57,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",57,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",57,{"inputs":[{"name":"self"},{"name":"wldatadevicemanager"}],"output":{"name":"bool"}}],[11,"set_user_data","","",57,null],[11,"get_user_data","","",57,null],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"cmp","","",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"ordering"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",58,{"inputs":[],"output":{"name":"dndaction"}}],[11,"all","","Returns the set containing all flags.",58,{"inputs":[],"output":{"name":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",58,{"inputs":[{"name":"u32"}],"output":{"name":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",58,{"inputs":[{"name":"self"},{"name":"dndaction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":{"name":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",58,{"inputs":[{"name":"self"},{"name":"dndaction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",58,{"inputs":[{"name":"self"}],"output":{"name":"dndaction"}}],[11,"extend","","",58,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"dndaction"}}],[11,"from_raw","","",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_shell_surface","wayland_server::protocol::wl_shell","create a shell surface from a surface",17,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshell"},{"name":"wlshellsurface"},{"name":"wlsurface"}],"output":null}],[11,"ptr","","",59,null],[11,"from_ptr_new","","",59,null],[11,"from_ptr_initialized","","",59,null],[11,"interface_ptr","","",59,null],[11,"interface_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",59,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",59,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",59,{"inputs":[{"name":"self"},{"name":"wlshell"}],"output":{"name":"bool"}}],[11,"set_user_data","","",59,null],[11,"get_user_data","","",59,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",16,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",16,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"pong","wayland_server::protocol::wl_shell_surface","respond to a ping event",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"u32"}],"output":null}],[11,"move_","","start an interactive move",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"}],"output":null}],[11,"resize","","start an interactive resize",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"resize"}],"output":null}],[11,"set_toplevel","","make the surface a toplevel surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"}],"output":null}],[11,"set_transient","","make the surface a transient surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"transient"}],"output":null}],[11,"set_fullscreen","","make the surface a fullscreen surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"fullscreenmethod"},{"name":"u32"},{"name":"option"}],"output":null}],[11,"set_popup","","make the surface a popup surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"wlseat"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"transient"}],"output":null}],[11,"set_maximized","","make the surface a maximized surface",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"option"}],"output":null}],[11,"set_title","","set surface title",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"string"}],"output":null}],[11,"set_class","","set surface class",19,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlshellsurface"},{"name":"string"}],"output":null}],[11,"ptr","","",60,null],[11,"from_ptr_new","","",60,null],[11,"from_ptr_initialized","","",60,null],[11,"interface_ptr","","",60,null],[11,"interface_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",60,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",60,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",60,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",60,{"inputs":[{"name":"self"},{"name":"wlshellsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",60,null],[11,"get_user_data","","",60,null],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"ordering"}}],[11,"hash","","",61,null],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[],"output":{"name":"resize"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[],"output":{"name":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",61,{"inputs":[{"name":"u32"}],"output":{"name":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",61,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":{"name":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",61,{"inputs":[{"name":"self"},{"name":"resize"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"self"}],"output":{"name":"resize"}}],[11,"extend","","",61,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"resize"}}],[11,"from_raw","","",61,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"cmp","","",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"ordering"}}],[11,"hash","","",62,null],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",62,{"inputs":[],"output":{"name":"transient"}}],[11,"all","","Returns the set containing all flags.",62,{"inputs":[],"output":{"name":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",62,{"inputs":[{"name":"u32"}],"output":{"name":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",62,{"inputs":[{"name":"self"},{"name":"transient"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":{"name":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",62,{"inputs":[{"name":"self"},{"name":"transient"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",62,{"inputs":[{"name":"self"}],"output":{"name":"transient"}}],[11,"extend","","",62,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",62,{"inputs":[{"name":"t"}],"output":{"name":"transient"}}],[11,"from_raw","","",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmethod"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"from_raw","","",18,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",18,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"ping","","ping client",60,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"configure","","suggest resize",60,{"inputs":[{"name":"self"},{"name":"resize"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"popup_done","","popup interaction is done",60,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_server::protocol::wl_surface","delete surface",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"}],"output":null}],[11,"attach","","set the surface contents",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"damage","","mark part of the surface damaged",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"frame","","request a frame throttling hint",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"wlcallback"}],"output":null}],[11,"set_opaque_region","","set opaque region",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"option"}],"output":null}],[11,"set_input_region","","set input region",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"option"}],"output":null}],[11,"commit","","commit pending surface state",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"}],"output":null}],[11,"set_buffer_transform","","sets the buffer transformation",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"transform"}],"output":null}],[11,"set_buffer_scale","","sets the buffer scaling factor",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"i32"}],"output":null}],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",21,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","",63,null],[11,"from_ptr_new","","",63,null],[11,"from_ptr_initialized","","",63,null],[11,"interface_ptr","","",63,null],[11,"interface_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",63,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",63,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",63,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",63,{"inputs":[{"name":"self"},{"name":"wlsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",63,null],[11,"get_user_data","","",63,null],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",20,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",20,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"enter","","surface enters an output",63,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"eventresult"}}],[11,"leave","","surface leaves an output",63,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"eventresult"}}],[11,"get_pointer","wayland_server::protocol::wl_seat","return pointer object",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlseat"},{"name":"wlpointer"}],"output":null}],[11,"get_keyboard","","return keyboard object",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlseat"},{"name":"wlkeyboard"}],"output":null}],[11,"get_touch","","return touch object",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlseat"},{"name":"wltouch"}],"output":null}],[11,"release","","release the seat object",22,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlseat"}],"output":null}],[11,"ptr","","",64,null],[11,"from_ptr_new","","",64,null],[11,"from_ptr_initialized","","",64,null],[11,"interface_ptr","","",64,null],[11,"interface_name","","",64,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",64,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",64,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",64,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",64,{"inputs":[{"name":"self"},{"name":"wlseat"}],"output":{"name":"bool"}}],[11,"set_user_data","","",64,null],[11,"get_user_data","","",64,null],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"option"}}],[11,"lt","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"le","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"gt","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"ge","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"cmp","","",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"ordering"}}],[11,"hash","","",65,null],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",65,{"inputs":[],"output":{"name":"capability"}}],[11,"all","","Returns the set containing all flags.",65,{"inputs":[],"output":{"name":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",65,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",65,{"inputs":[{"name":"u32"}],"output":{"name":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",65,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",65,{"inputs":[{"name":"self"},{"name":"capability"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",65,{"inputs":[{"name":"self"},{"name":"capability"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",65,{"inputs":[{"name":"self"}],"output":{"name":"capability"}}],[11,"extend","","",65,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",65,{"inputs":[{"name":"t"}],"output":{"name":"capability"}}],[11,"from_raw","","",65,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",65,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"capabilities","","seat capabilities changed",64,{"inputs":[{"name":"self"},{"name":"capability"}],"output":{"name":"eventresult"}}],[11,"name","","unique identifier for this seat",64,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"eventresult"}}],[11,"set_cursor","wayland_server::protocol::wl_pointer","set the pointer surface",27,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlpointer"},{"name":"u32"},{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"release","","release the pointer object",27,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlpointer"}],"output":null}],[11,"ptr","","",66,null],[11,"from_ptr_new","","",66,null],[11,"from_ptr_initialized","","",66,null],[11,"interface_ptr","","",66,null],[11,"interface_name","","",66,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",66,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",66,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",66,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",66,{"inputs":[{"name":"self"},{"name":"wlpointer"}],"output":{"name":"bool"}}],[11,"set_user_data","","",66,null],[11,"get_user_data","","",66,null],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",23,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",23,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"from_raw","","",24,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"axis"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"axis"}],"output":{"name":"bool"}}],[11,"from_raw","","",25,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",25,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"axissource"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"bool"}}],[11,"from_raw","","",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"enter","","enter event",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"leave","","leave event",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"motion","","pointer motion event",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"button","","pointer button event",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"buttonstate"}],"output":{"name":"eventresult"}}],[11,"axis","","axis event",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"axis"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"frame","","end of a pointer event sequence",66,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"axis_source","","axis source event",66,{"inputs":[{"name":"self"},{"name":"axissource"}],"output":{"name":"eventresult"}}],[11,"axis_stop","","axis stop event",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"axis"}],"output":{"name":"eventresult"}}],[11,"axis_discrete","","axis click event",66,{"inputs":[{"name":"self"},{"name":"axis"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"release","wayland_server::protocol::wl_keyboard","release the keyboard object",30,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlkeyboard"}],"output":null}],[11,"ptr","","",67,null],[11,"from_ptr_new","","",67,null],[11,"from_ptr_initialized","","",67,null],[11,"interface_ptr","","",67,null],[11,"interface_name","","",67,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",67,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",67,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",67,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",67,{"inputs":[{"name":"self"},{"name":"wlkeyboard"}],"output":{"name":"bool"}}],[11,"set_user_data","","",67,null],[11,"get_user_data","","",67,null],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"keymapformat"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"from_raw","","",28,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",28,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"keystate"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"from_raw","","",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",29,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"keymap","","keyboard mapping",67,{"inputs":[{"name":"self"},{"name":"keymapformat"},{"name":"rawfd"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"enter","","enter event",67,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"},{"name":"vec"}],"output":{"name":"eventresult"}}],[11,"leave","","leave event",67,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"wlsurface"}],"output":{"name":"eventresult"}}],[11,"key","","key event",67,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"keystate"}],"output":{"name":"eventresult"}}],[11,"modifiers","","modifier and group state",67,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"eventresult"}}],[11,"repeat_info","","repeat rate and delay",67,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"release","wayland_server::protocol::wl_touch","release the touch object",31,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wltouch"}],"output":null}],[11,"ptr","","",68,null],[11,"from_ptr_new","","",68,null],[11,"from_ptr_initialized","","",68,null],[11,"interface_ptr","","",68,null],[11,"interface_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",68,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",68,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",68,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",68,{"inputs":[{"name":"self"},{"name":"wltouch"}],"output":{"name":"bool"}}],[11,"set_user_data","","",68,null],[11,"get_user_data","","",68,null],[11,"down","","touch down event and beginning of a touch sequence",68,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"wlsurface"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"up","","end of a touch event sequence",68,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"motion","","update of touch point coordinates",68,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"i32"},{"name":"f64"},{"name":"f64"}],"output":{"name":"eventresult"}}],[11,"frame","","end of touch frame event",68,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"cancel","","touch session cancelled",68,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"release","wayland_server::protocol::wl_output","release the output object",34,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wloutput"}],"output":null}],[11,"ptr","","",69,null],[11,"from_ptr_new","","",69,null],[11,"from_ptr_initialized","","",69,null],[11,"interface_ptr","","",69,null],[11,"interface_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",69,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",69,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",69,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",69,{"inputs":[{"name":"self"},{"name":"wloutput"}],"output":{"name":"bool"}}],[11,"set_user_data","","",69,null],[11,"get_user_data","","",69,null],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"subpixel"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"subpixel"}],"output":{"name":"bool"}}],[11,"from_raw","","",32,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",32,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"transform"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"transform"}],"output":{"name":"bool"}}],[11,"from_raw","","",33,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"option"}}],[11,"lt","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",70,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",70,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",70,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",70,{"inputs":[{"name":"u32"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",70,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",70,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",70,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",70,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",70,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",70,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[11,"from_raw","","",70,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",70,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"geometry","","properties of the output",69,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"subpixel"},{"name":"string"},{"name":"string"},{"name":"transform"}],"output":{"name":"eventresult"}}],[11,"mode","","advertise available modes for the output",69,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"done","","sent all information about output",69,{"inputs":[{"name":"self"}],"output":{"name":"eventresult"}}],[11,"scale","","output scaling properties",69,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"eventresult"}}],[11,"destroy","wayland_server::protocol::wl_region","destroy region",35,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlregion"}],"output":null}],[11,"add","","add rectangle to region",35,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlregion"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"subtract","","subtract rectangle from region",35,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlregion"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ptr","","",71,null],[11,"from_ptr_new","","",71,null],[11,"from_ptr_initialized","","",71,null],[11,"interface_ptr","","",71,null],[11,"interface_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",71,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",71,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",71,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",71,{"inputs":[{"name":"self"},{"name":"wlregion"}],"output":{"name":"bool"}}],[11,"set_user_data","","",71,null],[11,"get_user_data","","",71,null],[11,"destroy","wayland_server::protocol::wl_subcompositor","unbind from the subcompositor interface",37,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubcompositor"}],"output":null}],[11,"get_subsurface","","give a surface the role sub-surface",37,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubcompositor"},{"name":"wlsubsurface"},{"name":"wlsurface"},{"name":"wlsurface"}],"output":null}],[11,"ptr","","",72,null],[11,"from_ptr_new","","",72,null],[11,"from_ptr_initialized","","",72,null],[11,"interface_ptr","","",72,null],[11,"interface_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",72,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",72,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",72,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",72,{"inputs":[{"name":"self"},{"name":"wlsubcompositor"}],"output":{"name":"bool"}}],[11,"set_user_data","","",72,null],[11,"get_user_data","","",72,null],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",36,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"destroy","wayland_server::protocol::wl_subsurface","remove sub-surface interface",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"}],"output":null}],[11,"set_position","","reposition the sub-surface",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"place_above","","restack the sub-surface",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"},{"name":"wlsurface"}],"output":null}],[11,"place_below","","restack the sub-surface",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"},{"name":"wlsurface"}],"output":null}],[11,"set_sync","","set sub-surface to synchronized mode",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"}],"output":null}],[11,"set_desync","","set sub-surface to desynchronized mode",39,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"wlsubsurface"}],"output":null}],[11,"ptr","","",73,null],[11,"from_ptr_new","","",73,null],[11,"from_ptr_initialized","","",73,null],[11,"interface_ptr","","",73,null],[11,"interface_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"supported_version","","",73,{"inputs":[],"output":{"name":"u32"}}],[11,"version","","",73,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"status","","",73,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"equals","","",73,{"inputs":[{"name":"self"},{"name":"wlsubsurface"}],"output":{"name":"bool"}}],[11,"set_user_data","","",73,null],[11,"get_user_data","","",73,null],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_raw","","",38,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"to_raw","","",38,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[0,"sys","wayland_server","Reexports of types and objects from wayland-sys",null,null],[8,"Destroy","","A trait to handle destruction of ressources.",null,null],[10,"destroy","","Destructor of a resource",74,{"inputs":[{"name":"r"}],"output":null}],[8,"GlobalHandler","","Trait to handle a global object.",null,null],[10,"bind","","Request to bind a global",75,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"client"},{"name":"r"}],"output":null}],[8,"Init","","A trait to initialize handlers after they've been inserted in an event queue",null,null],[10,"init","","Init the handler",76,{"inputs":[{"name":"self"},{"name":"eventloophandle"},{"name":"usize"}],"output":null}],[8,"Resource","","Common routines for wayland resource objects.",null,null],[10,"ptr","","Pointer to the underlying wayland proxy object",77,null],[10,"from_ptr_new","","Create an instance from a wayland pointer",77,null],[10,"from_ptr_initialized","","Create an instance from a wayland pointer",77,null],[10,"interface_ptr","","Pointer to the interface representation",77,null],[10,"interface_name","","Internal wayland name of this interface",77,{"inputs":[],"output":{"name":"str"}}],[10,"supported_version","","Max version of this interface supported",77,{"inputs":[],"output":{"name":"u32"}}],[10,"version","","Current version of the interface this resource is instantiated with",77,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"status","","Check if the resource behind this handle is actually still alive",77,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[10,"equals","","Check of two handles are actually the same wayland object",77,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[10,"set_user_data","","Set a pointer associated as user data on this resource",77,null],[10,"get_user_data","","Get the pointer associated as user data on this resource",77,null],[11,"post_error","","Posts a protocol error to this resource",77,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"string"}],"output":null}],[11,"clone","","Clone this resource handle",77,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone_unchecked","","Unsafely clone this resource handle",77,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[8,"Handler","","Generic handler trait",null,null],[10,"message","","Dispatch a message.",78,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"expect","","Assert that result is successfull and extract the value.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"t"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"liveness"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"liveness"}],"output":{"name":"bool"}}],[14,"server_declare_handler","","Synonym of the declare_handler! macro.",null,null],[14,"declare_handler","","Registers a handler type so it can be used in event loops",null,null],[14,"server_declare_delegating_handler","","Synonym of the declare_delegating_handler! macro.",null,null],[14,"declare_delegating_handler","","Registers a handler type so it as delegating to one of its fields",null,null],[11,"eq","wayland_server::sources","",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"fdinterest"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"option"}}],[11,"lt","","",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"le","","",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"gt","","",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"ge","","",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"cmp","","",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"ordering"}}],[11,"hash","","",79,null],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",79,{"inputs":[],"output":{"name":"fdinterest"}}],[11,"all","","Returns the set containing all flags.",79,{"inputs":[],"output":{"name":"fdinterest"}}],[11,"bits","","Returns the raw value of the flags currently stored.",79,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",79,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",79,{"inputs":[{"name":"u32"}],"output":{"name":"fdinterest"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitor_assign","","Adds the set of flags.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitxor_assign","","Toggles the set of flags.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":{"name":"fdinterest"}}],[11,"sub_assign","","Disables all flags enabled in the set.",79,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",79,{"inputs":[{"name":"self"}],"output":{"name":"fdinterest"}}],[11,"extend","","",79,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",79,{"inputs":[{"name":"t"}],"output":{"name":"fdinterest"}}],[11,"update_mask","","Change the registered interest for this FD",80,{"inputs":[{"name":"self"},{"name":"fdinterest"}],"output":null}],[11,"remove","","Remove this event source from its event loop",80,{"inputs":[{"name":"self"}],"output":null}],[11,"set_delay_ms","","Set the delay of this timer",81,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"remove","","Remove this event source from its event loop",81,{"inputs":[{"name":"self"}],"output":null}],[11,"remove","","Remove this event source from its event loop",82,{"inputs":[{"name":"self"}],"output":null}]],"paths":[[4,"RegisterStatus"],[4,"EventResult"],[4,"Liveness"],[8,"Handler"],[8,"Handler"],[4,"Error"],[4,"Format"],[8,"Handler"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"FullscreenMethod"],[8,"Handler"],[4,"Error"],[8,"Handler"],[8,"Handler"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[8,"Handler"],[4,"KeymapFormat"],[4,"KeyState"],[8,"Handler"],[8,"Handler"],[4,"Subpixel"],[4,"Transform"],[8,"Handler"],[8,"Handler"],[4,"Error"],[8,"Handler"],[4,"Error"],[8,"Handler"],[3,"Client"],[3,"Display"],[3,"Global"],[3,"EventLoopHandle"],[3,"StateGuard"],[3,"EventLoop"],[8,"FdEventSourceHandler"],[8,"SignalEventSourceHandler"],[8,"TimerEventSourceHandler"],[3,"WlCallback"],[3,"WlCompositor"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"DndAction"],[3,"WlShell"],[3,"WlShellSurface"],[3,"Resize"],[3,"Transient"],[3,"WlSurface"],[3,"WlSeat"],[3,"Capability"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"Mode"],[3,"WlRegion"],[3,"WlSubcompositor"],[3,"WlSubsurface"],[8,"Destroy"],[8,"GlobalHandler"],[8,"Init"],[8,"Resource"],[8,"Handler"],[3,"FdInterest"],[3,"FdEventSource"],[3,"TimerEventSource"],[3,"SignalEventSource"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","items":[[6,"gid_t","wayland_sys","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[0,"common","","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[3,"wl_argument","","",null,null],[5,"wl_fixed_to_double","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"f64"}}],[5,"wl_fixed_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"inputs":[{"name":"wl_fixed_t"}],"output":{"name":"i32"}}],[5,"wl_fixed_from_int","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",4,null],[12,"wl_display_connect","","",4,null],[12,"wl_display_disconnect","","",4,null],[12,"wl_display_get_fd","","",4,null],[12,"wl_display_roundtrip","","",4,null],[12,"wl_display_read_events","","",4,null],[12,"wl_display_prepare_read","","",4,null],[12,"wl_display_cancel_read","","",4,null],[12,"wl_display_dispatch","","",4,null],[12,"wl_display_dispatch_pending","","",4,null],[12,"wl_display_get_error","","",4,null],[12,"wl_display_get_protocol_error","","",4,null],[12,"wl_display_flush","","",4,null],[12,"wl_event_queue_destroy","","",4,null],[12,"wl_display_create_queue","","",4,null],[12,"wl_display_roundtrip_queue","","",4,null],[12,"wl_display_prepare_read_queue","","",4,null],[12,"wl_display_dispatch_queue","","",4,null],[12,"wl_display_dispatch_queue_pending","","",4,null],[12,"wl_proxy_create","","",4,null],[12,"wl_proxy_destroy","","",4,null],[12,"wl_proxy_add_listener","","",4,null],[12,"wl_proxy_get_listener","","",4,null],[12,"wl_proxy_add_dispatcher","","",4,null],[12,"wl_proxy_marshal_array_constructor","","",4,null],[12,"wl_proxy_marshal_array_constructor_versioned","","",4,null],[12,"wl_proxy_marshal_array","","",4,null],[12,"wl_proxy_set_user_data","","",4,null],[12,"wl_proxy_get_user_data","","",4,null],[12,"wl_proxy_get_id","","",4,null],[12,"wl_proxy_get_class","","",4,null],[12,"wl_proxy_set_queue","","",4,null],[12,"wl_proxy_get_version","","",4,null],[12,"wl_log_set_handler_client","","",4,null],[12,"wl_list_init","","",4,null],[12,"wl_list_insert","","",4,null],[12,"wl_list_remove","","",4,null],[12,"wl_list_length","","",4,null],[12,"wl_list_empty","","",4,null],[12,"wl_list_insert_list","","",4,null],[12,"wl_array_init","","",4,null],[12,"wl_array_release","","",4,null],[12,"wl_array_add","","",4,null],[12,"wl_array_copy","","",4,null],[12,"wl_proxy_marshal_constructor","","",4,null],[12,"wl_proxy_marshal_constructor_versioned","","",4,null],[12,"wl_proxy_marshal","","",4,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"waylandclient"}}],[11,"initialize","","",6,{"inputs":[{"name":"self"}],"output":null}],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",null,null],[3,"wl_listener","wayland_sys::server","",null,null],[12,"link","","",7,null],[12,"notify","","",7,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",8,null],[3,"WaylandServer","","",null,null],[12,"wl_client_flush","","",9,null],[12,"wl_client_destroy","","",9,null],[12,"wl_client_get_display","","",9,null],[12,"wl_client_get_credentials","","",9,null],[12,"wl_client_get_object","","",9,null],[12,"wl_client_add_destroy_listener","","",9,null],[12,"wl_client_get_destroy_listener","","",9,null],[12,"wl_client_post_no_memory","","",9,null],[12,"wl_resource_create","","",9,null],[12,"wl_client_create","","",9,null],[12,"wl_display_create","","",9,null],[12,"wl_display_destroy","","",9,null],[12,"wl_display_get_serial","","",9,null],[12,"wl_display_next_serial","","",9,null],[12,"wl_display_add_socket","","",9,null],[12,"wl_display_add_socket_auto","","",9,null],[12,"wl_display_add_socket_fd","","",9,null],[12,"wl_display_add_shm_format","","",9,null],[12,"wl_display_get_event_loop","","",9,null],[12,"wl_display_terminate","","",9,null],[12,"wl_display_run","","",9,null],[12,"wl_display_flush_clients","","",9,null],[12,"wl_display_add_destroy_listener","","",9,null],[12,"wl_display_get_destroy_listener","","",9,null],[12,"wl_global_create","","",9,null],[12,"wl_display_init_shm","","",9,null],[12,"wl_event_loop_create","","",9,null],[12,"wl_event_loop_destroy","","",9,null],[12,"wl_event_loop_add_fd","","",9,null],[12,"wl_event_loop_add_timer","","",9,null],[12,"wl_event_loop_add_signal","","",9,null],[12,"wl_event_loop_dispatch","","",9,null],[12,"wl_event_loop_dispatch_idle","","",9,null],[12,"wl_event_loop_add_idle","","",9,null],[12,"wl_event_loop_get_fd","","",9,null],[12,"wl_event_loop_add_destroy_listener","","",9,null],[12,"wl_event_loop_get_destroy_listener","","",9,null],[12,"wl_event_source_fd_update","","",9,null],[12,"wl_event_source_timer_update","","",9,null],[12,"wl_event_source_remove","","",9,null],[12,"wl_event_source_check","","",9,null],[12,"wl_global_destroy","","",9,null],[12,"wl_resource_post_event_array","","",9,null],[12,"wl_resource_queue_event_array","","",9,null],[12,"wl_resource_post_no_memory","","",9,null],[12,"wl_resource_set_implementation","","",9,null],[12,"wl_resource_set_dispatcher","","",9,null],[12,"wl_resource_destroy","","",9,null],[12,"wl_resource_get_client","","",9,null],[12,"wl_resource_get_id","","",9,null],[12,"wl_resource_get_link","","",9,null],[12,"wl_resource_from_link","","",9,null],[12,"wl_resource_find_for_client","","",9,null],[12,"wl_resource_set_user_data","","",9,null],[12,"wl_resource_get_user_data","","",9,null],[12,"wl_resource_get_version","","",9,null],[12,"wl_resource_set_destructor","","",9,null],[12,"wl_resource_instance_of","","",9,null],[12,"wl_resource_add_destroy_listener","","",9,null],[12,"wl_resource_get_destroy_listener","","",9,null],[12,"wl_shm_buffer_begin_access","","",9,null],[12,"wl_shm_buffer_end_access","","",9,null],[12,"wl_shm_buffer_get","","",9,null],[12,"wl_shm_buffer_get_data","","",9,null],[12,"wl_shm_buffer_get_stride","","",9,null],[12,"wl_shm_buffer_get_format","","",9,null],[12,"wl_shm_buffer_get_width","","",9,null],[12,"wl_shm_buffer_get_height","","",9,null],[12,"wl_log_set_handler_server","","",9,null],[12,"wl_list_init","","",9,null],[12,"wl_list_insert","","",9,null],[12,"wl_list_remove","","",9,null],[12,"wl_list_length","","",9,null],[12,"wl_list_empty","","",9,null],[12,"wl_list_insert_list","","",9,null],[12,"wl_array_init","","",9,null],[12,"wl_array_release","","",9,null],[12,"wl_array_add","","",9,null],[12,"wl_array_copy","","",9,null],[12,"wl_resource_post_event","","",9,null],[12,"wl_resource_queue_event","","",9,null],[12,"wl_resource_post_error","","",9,null],[3,"WAYLAND_SERVER_OPTION","","",null,null],[3,"WAYLAND_SERVER_HANDLE","","",null,null],[4,"wl_client","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"signal","","",null,null],[5,"wl_signal_init","wayland_sys::server::signal","",null,null],[5,"wl_signal_add","","",null,null],[5,"wl_signal_get","","",null,null],[5,"wl_signal_emit","","",null,null],[6,"wl_event_loop_fd_func_t","wayland_sys::server","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[11,"open","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"waylandserver"}}],[11,"initialize","","",11,{"inputs":[{"name":"self"}],"output":null}],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",12,null],[12,"wl_egl_window_destroy","","",12,null],[12,"wl_egl_window_resize","","",12,null],[12,"wl_egl_window_get_attached_size","","",12,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",12,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",14,{"inputs":[{"name":"self"}],"output":{"name":"waylandegl"}}],[11,"initialize","","",14,{"inputs":[{"name":"self"}],"output":null}],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",null,null],[3,"wl_cursor_image","wayland_sys::cursor","",null,null],[12,"width","","actual width",15,null],[12,"height","","actual height",15,null],[12,"hotspot_x","","hot spot x (must be inside image)",15,null],[12,"hotspot_y","","hot spot y (must be inside image)",15,null],[12,"delay","","animation delay to next frame",15,null],[3,"wl_cursor","","",null,null],[12,"image_count","","",16,null],[12,"images","","",16,null],[12,"name","","",16,null],[3,"WaylandCursor","","",null,null],[12,"wl_cursor_theme_load","","",17,null],[12,"wl_cursor_theme_destroy","","",17,null],[12,"wl_cursor_theme_get_cursor","","",17,null],[12,"wl_cursor_image_get_buffer","","",17,null],[12,"wl_cursor_frame","","",17,null],[12,"wl_cursor_frame_and_duration","","",17,null],[3,"WAYLAND_CURSOR_OPTION","","",null,null],[3,"WAYLAND_CURSOR_HANDLE","","",null,null],[4,"wl_cursor_theme","","",null,null],[5,"is_lib_available","","",null,{"inputs":[],"output":{"name":"bool"}}],[11,"open","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"initialize","","",18,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"waylandcursor"}}],[11,"initialize","","",19,{"inputs":[{"name":"self"}],"output":null}],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",null,null],[14,"ffi_dispatch","","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"]]};
initSearch(searchIndex);
